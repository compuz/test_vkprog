{"version":3,"sources":["j2ds.js","MathUtil.js","TextureUtil.js","Dom.js","Gui.js","Events.js","BaseNode.js","CircleNode.js","LineNode.js","RectNode.js","SpriteNode.js","TextNode.js","DeviceManager.js","ErrorManager.js","FpsManager.js","ResourceManager.js","StorageManager.js","TimeManager.js","TriggerManager.js","ViewManager.js","AudioHandler.js","InputHandler.js","Layers.js","Scene.js","j2Ds.js"],"names":["root","factory","define","amd","module","exports","window","global","MathUtil","v2f","x","y","v2i","toInt","number","rndColor","min","max","opacity","random","omitZero","Math","floor","rad","num","PI","is4VerticesIntersect","a","b","m","n","length","isLineIntersect","c","d","dx","g","l","isPointInRect","p","isPointInTriangle","sign","p1","p2","p3","pt","b1","b2","b3","undefined","j2Ds","modules","utils","TextureUtil","this","prototype","createImageMap","width","height","callback","textureUtil","resources","add","image","img","loaded","document","createElement","context","getContext","getAnimation","sourceX","sourceY","sourceW","sourceH","frameCount","imageMap","ok","loadImageMap","path","crossOrigin","src","addEventListener","templates","ellipse","size","color","fillRect","fillStyle","strokeRect","lineWidth","strokeStyle","gradientL","colors","isHorizontal","gradient","createLinearGradient","step","i","j","addColorStop","gradientR","pos1","r1","pos2","r2","createRadialGradient","Dom","id","getElementById","name","getElementsByName","tag","parent","finder","getElementsByTagName","goURL","url","location","href","reloadURL","attach","dom","events","addEvent","appendChild","injectJavaScript","code","toString","replace","callJava","send","ajax","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","core","Gui","nodes","Events","scene:deactivate","scene:activate","scene:beforeInit","scene:afterInit","scene:beforeStart","scene:afterStart","engine:before","engine:after","scene:changedGameState","writeMode:keyPress","dom:loaded","eventType","push","now","ready","onEvent","destroyEvent","len","splice","args","err","errorManager","showError","require","BaseNode","j2DsEngine","pos","visible","alpha","angle","layer","scene","box","offset","resizeBox","setLayer","layers","getLayer","setVisible","isVisible","setAlpha","getAlpha","moveTo","to","t","move","getPosition","setPosition","ceil","setSize","getSize","setParent","getDistance","sqrt","pow","getDistanceXY","abs","getBox","node","x1","x2","y1","y2","getBoxVertices","view","dy","sin","cos","toFixed","checkBoxIntersect","node1","node2","isPointInsideBox","vf","point","isIntersect","Array","isCollision","result","isLookScene","turn","setRotation","getRotation","rotateTo","atan2","isOutScene","vector","all","moveDir","speed","drawBox","save","translate","rotate","beginPath","rect","stroke","restore","CircleNode","radius","call","Object","create","constructor","draw","tmpAlpha","globalAlpha","arc","fill","LineNode","points","scale","cFill","lineTo","RectNode","SpriteNode","animation","tmpSpeed","frame","flip","setFlip","drawFrame","show","drawImage","setAnimation","TextNode","text","sizePx","family","colorL","vAlign","hAlign","font","fullText","maxWidth","lines","split","measureText","drawSimpleText","textAlign","textBaseline","strokeText","fillText","getText","setText","DeviceManager","parseInt","documentElement","clientWidth","screen","clientHeight","managers","ErrorManager","mode","enabled","init","_true","runBtn","innerHTML","style","padding","align","position","zIndex","left","top","getDeviceManager","fontSize","backgroundColor","cursor","onmousedown","e","stopPropagation","onclick","runEngine","logListener","elems","pauseBtn","stopEngine","reloadBtn","onerror","string","console","log","setMode","debug","_func","stack","match","file","line","decodeURI","errMess","message","domId","count","execLine","lightSyntax","_code","_type","FpsManager","fps","frameLimit","tmp_of_fps","tmp_of_time","Date","fpsManager","update","getFPS","ResourceManager","added","failed","fail","isLoaded","getProgress","StorageManager","ls","localStorage","alert","saveNode","o","setItem","JSON","stringify","load","getItem","is","value","loadNode","parse","TimeManager","times","insert","get","TriggerManager","triggers","triggerManager","trigger","command","state","last","run","mSec","job","loop","reset","ViewManager","views","viewManager","viewport","focusNode","AudioHandler","audios","audioHandler","deactivate","activate","files","vol","audio","source","volume","sound","domEl","lock","onePlay","explicitOriginalTarget","currentSrc","setLock","play","unlock","currentTime","pause","stop","setVolume","getVolume","getState","getPlayPosition","snd","io","InputHandler","screenPos","touch","touchTap","touchHold","touchAutoHold","touchCount","touchDuration","keyDown","keyPress","keyPressed","keyUp","keyUped","mouseDown","mousePress","mousePressed","mouseUp","mouseUpped","mouseWheel","canceled","body","anyKey","anyMouse","writeMode","displayCursor","mKey","LEFT","MIDDLE","RIGHT","jKey","UP","DOWN","SPACE","CTRL","SHIFT","ALT","ESC","ENTER","MINUS","PLUS","CAPS_LOCK","BACKSPACE","TAB","Q","W","E","R","T","Y","U","I","O","P","A","S","D","F","G","H","J","K","L","Z","X","V","B","N","M","0","1","2","3","4","5","6","7","8","C","9","NUM_0","NUM_1","NUM_2","NUM_3","NUM_4","NUM_5","NUM_6","NUM_7","NUM_8","NUM_9","NUM_MINUS","NUM_PLUS","NUM_LOCK","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","keyList","isKeyDown","isKeyPress","isKeyUp","getScreenPosition","setWriteMode","isWriteMode","keyEvent","type","keyCode","preventDefault","char","which","charCode","String","fromCharCode","cancel","onNode","upd","dX","offsetWidth","dY","offsetHeight","onMove","input","offsetLeft","pageX","offsetTop","pageY","isMouseDown","isMousePress","isMouseUp","isTouch","isTouchTap","isTouchHold","setTouchDuration","duration","isMouseWheel","onMouseWheel","wheelDelta","detail","onMouseEvent","button","mouseUped","focus","onTouchEvent","touches","setCursorImage","curImg","oncontextmenu","onselectstart","ondragstart","onmouseup","onmousemove","onkeydown","onkeyup","onkeypress","onmousewheel","Layers","layersList","index","notDOM","layerName","canvas","stylePosition","shadowColor","onContext","display","setIndex","clear","clearRect","clearNode","setContextSettings","settings","Scene","gameStateName","canFullScreen","texture","setView","getView","setAutoDraw","toggle","drawAllNodes","setAutoClear","setGameState","gameStates","states","start","setActiveEngine","getGameState","fullScreen","tmpCanvas","tmpContext","origWidth","origHeight","fullScale","canDeactivate","cancelClear","onload","onblur","stopAll","onfocus","initCanvas","addBaseNode","addCircleNode","addLineNode","addRectNode","addSpriteNode","addTextNode","DOM","GUI","FPSManager","dt","sceneStartTime","sceneSkipTime","engine","gui","timeManager","deviceManager","createLocal","getInfo","version","git","site","description","author","getFPSManager","getSceneManager","getLayerManager","getTextureManager","getAudioManager","getPaintManager","paint","getIO","getDOMManager","getTriggerManager","getMathManager","getGameStateManager","getViewManager","getErrorManager","getTimeManager","getResourceManager","setWindow","setFrameLimit","_state","end","lastTime","gameEngine","setTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame"],"mappings":"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","file":"j2ds.js","sourcesContent":[null,"/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.4\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Вспомогательный класс содержащий статичные методы для облегчения расчетов.\r\n     *\r\n     * @class MathUtil\r\n     * @exports module:utils/MathUtil\r\n     *\r\n     * @constructor\r\n     */\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    /**\r\n     * Вектор\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {{x: number, y: number}}\r\n     */\r\n    MathUtil.v2f = function (x, y) {\r\n        return {x: x, y: y};\r\n    };\r\n\r\n    /**\r\n     * Целочисленный вектор\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {{x: number, y: number}}\r\n     */\r\n    MathUtil.v2i = function (x, y) {\r\n        return {x: (x >> 0), y: (y >> 0)};\r\n    };\r\n\r\n    /**\r\n     * Приведение типа числа к целочисленному\r\n     *\r\n     * @alias parseInt()\r\n     * @param number\r\n     * @returns {number}\r\n     */\r\n    MathUtil.toInt = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    /**\r\n     * Случайный цвет\r\n     *\r\n     * @param {number} min 0..256\r\n     * @param {number} max 0..256\r\n     * @param {number} opacity 0.0 ~ 1.0\r\n     * @returns {string} rgba(0..256, 0..256, 0..256, 0.0 ~ 1.0)\r\n     */\r\n    MathUtil.rndColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    /**\r\n     * Случайное число\r\n     *\r\n     * @param min Минимальное\r\n     * @param max Максимальное\r\n     * @param omitZero Включая нуль?\r\n     * @returns {number}\r\n     */\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    /**\r\n     * Приведение градусов в радианы\r\n     *\r\n     * @param {number} num 0..360\r\n     * @returns {number}\r\n     */\r\n    MathUtil.rad = function (num) {\r\n        return num * (Math.PI / 180);\r\n    };\r\n\r\n    /**\r\n     * Проверка пересечения отрезков вершин двух фигур\r\n     *\r\n     * @param {Array.<{x: number, y: number}>} a\r\n     * @param {Array.<{x: number, y: number}>} b\r\n     * @returns {boolean}\r\n     */\r\n    MathUtil.is4VerticesIntersect = function (a, b) {\r\n        var m, n;\r\n        for (m = 0; m < a.length; m++) {\r\n            for (n = 0; n < b.length; n++) {\r\n                if (MathUtil.isLineIntersect(\r\n                        a[m],\r\n                        a[(m < a.length - 1) ? m + 1 : 0],\r\n                        b[n],\r\n                        b[(n < b.length - 1) ? n + 1 : 0])\r\n                ) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Проверка пересечения отрезков\r\n     *\r\n     * @param {{x: number, y: number}} a Начальная точка первого отрезка\r\n     * @param {{x: number, y: number}} b Конечная точка первого отрезка\r\n     * @param {{x: number, y: number}} c Начальная точка второго отрезка\r\n     * @param {{x: number, y: number}} d Конечная точка второго отрезка\r\n     * @returns {boolean}\r\n     */\r\n    MathUtil.isLineIntersect = function (a, b, c, d) {\r\n        var dx, g, l;\r\n        dx = (b.x - a.x) * (d.y - c.y) - (d.x - c.x) * (b.y - a.y);\r\n        if (dx === 0) {\r\n            return false;\r\n        } else {\r\n            l = ((d.y - c.y) * (d.x - a.x) + (c.x - d.x) * (d.y - a.y)) / dx;\r\n            g = ((a.y - b.y) * (d.x - a.x) + (b.x - a.x) * (d.y - a.y)) / dx;\r\n            return (0 < l && l < 1) && (0 < g && g < 1);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Проверка принадлежности точки прямоугольнику\r\n     *\r\n     * @param {{x: number, y: number}} a 1-я вершина прямоугольника\r\n     * @param {{x: number, y: number}} b 2-я вершина прямоугольника\r\n     * @param {{x: number, y: number}} c 3-я вершина прямоугольника\r\n     * @param {{x: number, y: number}} d 4-я вершина прямоугольника\r\n     * @param {{x: number, y: number}} p Точка\r\n     * @returns {boolean}\r\n     */\r\n    MathUtil.isPointInRect = function (a, b, c, d, p) {\r\n        return MathUtil.isPointInTriangle(p, a, b, c) || MathUtil.isPointInTriangle(p, c, d, a);\r\n    };\r\n\r\n    /**\r\n     * Служебная функция для проверки принадлежности точки треугольнику\r\n     *\r\n     * @param {{x: number, y: number}} p1\r\n     * @param {{x: number, y: number}} p2\r\n     * @param {{x: number, y: number}} p3\r\n     * @returns {number}\r\n     */\r\n    var sign = function (p1, p2, p3) {\r\n        return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\r\n    };\r\n\r\n    /**\r\n     * Проверка принадлежности точки треугольнику\r\n     *\r\n     * @param {{x: number, y: number}} pt Точка\r\n     * @param {{x: number, y: number}} a 1-я вершина прямоугольника\r\n     * @param {{x: number, y: number}} b 2-я вершина прямоугольника\r\n     * @param {{x: number, y: number}} c 3-я вершина прямоугольника\r\n     * @returns {boolean}\r\n     */\r\n    MathUtil.isPointInTriangle = function (pt, a, b, c) {\r\n        var b1, b2, b3;\r\n        b1 = sign(pt, a, b) < 0;\r\n        b2 = sign(pt, b, c) < 0;\r\n        b3 = sign(pt, c, a) < 0;\r\n\r\n        return ((b1 == b2) && (b2 == b3));\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.MathUtil = MathUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.MathUtil = MathUtil;\r\n    return MathUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.3\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/TextureUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Вспомогательный класс содержащий методы для генерации текстур.\r\n     *\r\n     * @class TextureUtil\r\n     * @exports module:utils/TextureUtil\r\n     *\r\n     * @constructor\r\n     */\r\n    var TextureUtil = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    /**\r\n     * Создает карту текстур\r\n     *\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * @param {function} callback\r\n     * @returns {{img: null|Element, loaded: boolean, width: number, height: number}}\r\n     */\r\n    TextureUtil.prototype.createImageMap = function (width, height, callback) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            /** @type null|Element */\r\n            img: null,\r\n            loaded: false,\r\n            width: width,\r\n            height: height\r\n        };\r\n\r\n        image.img = document.createElement('canvas');\r\n        image.context = image.img.getContext('2d');\r\n        image.img.width = image.width;\r\n        image.img.height = image.height;\r\n\r\n        callback(image.context);\r\n        image.loaded = true;\r\n\r\n        /**\r\n         * Возвращает анимацию\r\n         *\r\n         * @param {number} sourceX\r\n         * @param {number} sourceY\r\n         * @param {number} sourceW\r\n         * @param {number} sourceH\r\n         * @param {number} frameCount\r\n         * @returns {{imageMap: image, sourceX: number, sourceY: number, sourceW: number, sourceH: number, frameCount: number}}\r\n         */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        textureUtil.j2Ds.resources.ok('createImageMap_' + width + 'x' + height);\r\n\r\n        return image;\r\n    };\r\n\r\n    /**\r\n     * Загружает из файла карту текстур\r\n     *\r\n     * @param {string} path\r\n     * @returns {{img: null, width: number, height: number, loaded: boolean}}\r\n     */\r\n    TextureUtil.prototype.loadImageMap = function (path) {\r\n        var textureUtil = this;\r\n        textureUtil.j2Ds.resources.add();\r\n        var image = {\r\n            /** @type null|Element */\r\n            img: null,\r\n            width: 0,\r\n            height: 0,\r\n            loaded: false\r\n        };\r\n\r\n        image.img = document.createElement('img');\r\n        image.crossOrigin = 'anonymous';\r\n        image.img.src = path;\r\n\r\n        image.img.addEventListener('load', function () {\r\n            image.width = image.img.width;\r\n            image.height = image.img.height;\r\n            image.loaded = true;\r\n            textureUtil.j2Ds.resources.ok(path);\r\n        });\r\n\r\n        image.img.addEventListener('error', function () {\r\n            image.width = 0;\r\n            image.height = 0;\r\n            image.loaded = false;\r\n            //textureUtil.j2Ds.resources.fail(path);\r\n        });\r\n        /* Свойства */\r\n\r\n        /**\r\n         * Возвращает анимацию\r\n         *\r\n         * @param {number} sourceX\r\n         * @param {number} sourceY\r\n         * @param {number} sourceW\r\n         * @param {number} sourceH\r\n         * @param {number} frameCount\r\n         * @returns {{imageMap: image, sourceX: number, sourceY: number, sourceW: number, sourceH: number, frameCount: number}}\r\n         */\r\n        image.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        return image;\r\n    };\r\n\r\n    /* -------------------- */\r\n\r\n    /**\r\n     * Шаблоны\r\n     *\r\n     * @type {{ellipse: TextureUtil.templates.ellipse, fillRect: TextureUtil.templates.fillRect, strokeRect: TextureUtil.templates.strokeRect, gradientL: TextureUtil.templates.gradientL, gradientR: TextureUtil.templates.gradientR}}\r\n     */\r\n    TextureUtil.prototype.templates = {\r\n        /**\r\n         * Рисует эллипс\r\n         *\r\n         * @param {CanvasRenderingContext2D} context\r\n         * @param {number} size\r\n         * @param {string} color\r\n         */\r\n        ellipse: function (context, size, color) { // TODO??\r\n        },\r\n\r\n        /**\r\n         * Рисует прямоугольник закрашенный\r\n         *\r\n         * @param {CanvasRenderingContext2D} context\r\n         * @param {number} size\r\n         * @param {string} color\r\n         */\r\n        fillRect: function (context, size, color) {\r\n            context.fillStyle = color;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n\r\n        /**\r\n         * Рисует пустой прямоугольник\r\n         *\r\n         * @param {CanvasRenderingContext2D} context\r\n         * @param {number} size\r\n         * @param {string} color\r\n         * @param {number} lineWidth\r\n         */\r\n        strokeRect: function (context, size, color, lineWidth) {\r\n            context.strokeStyle = color;\r\n            context.lineWidth = lineWidth;\r\n            context.strokeRect(0, 0, size.x, size.y);\r\n        },\r\n\r\n        /**\r\n         * Рисует линейным градиентом\r\n         *\r\n         * @param {CanvasRenderingContext2D} context\r\n         * @param {number} size\r\n         * @param {Array.<string>} colors\r\n         * @param {boolean} isHorizontal\r\n         */\r\n        gradientL: function (context, size, colors, isHorizontal) {\r\n            var gradient = context.createLinearGradient(0, 0, size.x, 0);\r\n            var step = 1 / colors.length;\r\n            if (!isHorizontal) {\r\n                gradient = context.createLinearGradient(0, 0, 0, size.y);\r\n            }\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        },\r\n\r\n        /**\r\n         * Рисует радиальным градиентом\r\n         *\r\n         * @param {CanvasRenderingContext2D} context\r\n         * @param {{x: number, y: number}} size\r\n         * @param {{x: number, y: number}} pos1\r\n         * @param {number} r1\r\n         * @param {{x: number, y: number}} pos2\r\n         * @param {number} r2\r\n         * @param {Array.<string>} colors\r\n         */\r\n        gradientR: function (context, size, pos1, r1, pos2, r2, colors) {\r\n            var gradient = context.createRadialGradient(pos1.x, pos1.y, r1, pos2.x, pos2.y, r2);\r\n            var step = 1 / colors.length;\r\n            for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n                gradient.addColorStop(i, colors[j]);\r\n            }\r\n            context.fillStyle = gradient;\r\n            context.fillRect(0, 0, size.x, size.y);\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextureUtil = TextureUtil;\r\n    if (global.j2Ds !== undefined) global.modules.utils.TextureUtil = TextureUtil;\r\n    return TextureUtil;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Dom', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- DOM ---------------*/\r\n    var Dom = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n    };\r\n\r\n    Dom.prototype.id = function (id) {\r\n        return document.getElementById(id);\r\n    };\r\n\r\n    Dom.prototype.name = function (id) {\r\n        return document.getElementsByName(id)[0];\r\n    };\r\n\r\n    Dom.prototype.tag = function (id, parent) {\r\n        var finder = parent || document;\r\n        return finder.getElementsByTagName(id);\r\n    };\r\n\r\n    Dom.prototype.goURL = function (url) {\r\n        document.location.href = url;\r\n    };\r\n\r\n    Dom.prototype.reloadURL = function () {\r\n        document.location.href = document.location.href;\r\n    };\r\n\r\n    Dom.prototype.attach = function (id, parent) {\r\n        var dom = this;\r\n        this.j2Ds.events.addEvent('dom:loaded', function (parent) {\r\n            if (!parent) {\r\n                dom.tag('body')[0].appendChild(id);\r\n            } else {\r\n                dom.id(parent).appendChild(id);\r\n            }\r\n        });\r\n    };\r\n\r\n    Dom.prototype.injectJavaScript = function (code) {\r\n        code = code.toString();\r\n        code = code.replace(/[\\n\\r\\t]/g, ';');\r\n        document.location.href = 'javascript: var injectFunction = (function() {setTimeout(' + code + ', 0);}); injectFunction();';\r\n    };\r\n\r\n    Dom.prototype.callJava = function (code) {\r\n        document.location.href = 'javacall:' + code;\r\n    };\r\n\r\n    Dom.prototype.send = function (path, callback) {\r\n        var ajax = new XMLHttpRequest();\r\n        ajax.open('GET', path, true);\r\n        ajax.onreadystatechange = function () {\r\n            if (ajax.readyState == 4) {\r\n                if (ajax.status == 200) {\r\n                    callback(ajax.responseText);\r\n                }\r\n            }\r\n        };\r\n        ajax.send(null);\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Dom = Dom;\r\n    if (global.j2Ds !== undefined) global.modules.core.Dom = Dom;\r\n    return Dom;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Gui', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /*----------- GUI ---------------*/\r\n    var Gui = function () {\r\n        this.nodes = {};\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Gui = Gui;\r\n    if (global.j2Ds !== undefined) global.modules.core.Gui = Gui;\r\n    return Gui;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Events', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Events = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.events = {\r\n            'scene:deactivate': [],\r\n            'scene:activate': [],\r\n\r\n            'scene:beforeInit': [],\r\n            'scene:afterInit': [],\r\n            'scene:beforeStart': [],\r\n            'scene:afterStart': [],\r\n\r\n            'engine:before': [],\r\n            'engine:after': [],\r\n\r\n            'scene:changedGameState': [],\r\n\r\n            'writeMode:keyPress': [],\r\n\r\n            'dom:loaded': []\r\n        };\r\n    };\r\n\r\n\r\n    Events.prototype.addEvent = function (eventType, callback, id) {\r\n        this.events[eventType].push({\r\n            id: id || this.j2Ds.now,\r\n            callback: callback\r\n        });\r\n        if (this.j2Ds.ready && eventType == 'dom:loaded') {\r\n            this.onEvent('dom:loaded');\r\n            return true;\r\n        }\r\n    };\r\n\r\n    Events.prototype.destroyEvent = function (eventType, id) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType][i]['id'] == id) {\r\n                events.events[eventType].splice(i, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    Events.prototype.onEvent = function (eventType, args) {\r\n        var events = this;\r\n        for (var i = 0, len = events.events[eventType].length; i < len; i += 1) {\r\n            if (events.events[eventType]) {\r\n                try {\r\n                    events.events[eventType][i]['callback'](args || '');\r\n                } catch (err) {\r\n                    events.j2Ds.errorManager.showError(err);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Events = Events;\r\n    if (global.j2Ds !== undefined) global.modules.core.Events = Events;\r\n    return Events;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.4\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/BaseNode', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @exports module:nodes/BaseNode\r\n     */\r\n    var BaseNode;\r\n\r\n    /**\r\n     * Базовый класс о общими методами для всех узлов.\r\n     *\r\n     * @class BaseNode\r\n     * @alias module:nodes/BaseNode\r\n     *\r\n     * @abstract\r\n     * @constructor\r\n     * @param {j2DsEngine} j2DsEngine\r\n     * @param {{x: number, y: number}} pos\r\n     * @param {{x: number, y: number}} size\r\n     *\r\n     * @property {boolean} visible\r\n     * @property {number} alpha\r\n     * @property {{x: number, y: number}} pos\r\n     * @property {{x: number, y: number}} size\r\n     * @property {boolean} parent\r\n     * @property {number} angle\r\n     * @property {core/Scene} layer\r\n     * @property {{offset: {x: number, y: number}, size: {x: number, y: number}}} box\r\n     */\r\n    BaseNode = function (j2DsEngine, pos, size) {\r\n        j2Ds = j2DsEngine;\r\n        this.visible = true;\r\n        this.alpha = 1;\r\n        this.pos = pos;\r\n        this.size = size;\r\n        this.parent = false;\r\n        this.angle = 0;\r\n        this.layer = j2Ds.scene;\r\n        this.box = {\r\n            offset: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            size: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        j2Ds.scene.nodes.push(this);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {{x: number, y: number}} offset\r\n     * @param {{x: number, y: number}} size\r\n     */\r\n    BaseNode.prototype.resizeBox = function (offset, size) {\r\n        this.box.offset = offset;\r\n        this.box.size = size;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param layer\r\n     */\r\n    BaseNode.prototype.setLayer = function (layer) {\r\n        this.layer = layer ? j2Ds.layers.layer(layer) : j2Ds.scene;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {*}\r\n     */\r\n    BaseNode.prototype.getLayer = function () {\r\n        return this.layer;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param visible\r\n     */\r\n    BaseNode.prototype.setVisible = function (visible) {\r\n        this.visible = !!visible;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {boolean|*}\r\n     */\r\n    BaseNode.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param alpha\r\n     */\r\n    BaseNode.prototype.setAlpha = function (alpha) {\r\n        if (alpha < 0) alpha = 0;\r\n        if (alpha > 1) alpha = 1;\r\n        this.alpha = alpha;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {*|number}\r\n     */\r\n    BaseNode.prototype.getAlpha = function () {\r\n        return this.alpha;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param to\r\n     * @param t\r\n     */\r\n    BaseNode.prototype.moveTo = function (to, t) {\r\n        t = t ? t : 1;\r\n        this.move(MathUtil.v2f(\r\n            ((to.x - this.getPosition().x) / t),\r\n            ((to.y - this.getPosition().y) / t)\r\n        ));\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param pos\r\n     * @returns {*}\r\n     */\r\n    BaseNode.prototype.setPosition = function (pos) {\r\n        if (pos) {\r\n            this.pos = MathUtil.v2f(pos.x - Math.ceil(this.size.x / 2), pos.y - Math.ceil(this.size.y / 2));\r\n        } else {\r\n            return this.pos;\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param pos\r\n     */\r\n    BaseNode.prototype.move = function (pos) {\r\n        this.pos.x += pos.x;\r\n        this.pos.y += pos.y;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {{x, y}|{x: number, y: number}}\r\n     */\r\n    BaseNode.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x + Math.ceil(this.size.x / 2), this.pos.y + Math.ceil(this.size.y / 2));\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     * @returns {*}\r\n     */\r\n    BaseNode.prototype.setSize = function (size) {\r\n        if (size) {\r\n            this.size = size;\r\n        } else {\r\n            return this.size;\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {*}\r\n     */\r\n    BaseNode.prototype.getSize = function () {\r\n        return this.size;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param id\r\n     */\r\n    BaseNode.prototype.setParent = function (id) {\r\n        this.parent = id;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param id\r\n     * @returns {number}\r\n     */\r\n    BaseNode.prototype.getDistance = function (id) {\r\n        return Math.ceil(Math.sqrt(\r\n                Math.pow(id.getPosition().x - this.getPosition().x, 2) +\r\n                Math.pow(id.getPosition().y - this.getPosition().y, 2)\r\n            )\r\n        );\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param id\r\n     * @returns {{x, y}|{x: number, y: number}}\r\n     */\r\n    BaseNode.prototype.getDistanceXY = function (id) {\r\n        return MathUtil.v2f(Math.abs(id.getPosition().x - this.getPosition().x), Math.abs(id.getPosition().y - this.getPosition().y));\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @returns {{x1: *, x2: *, y1: *, y2: *}}\r\n     */\r\n    BaseNode.prototype.getBox = function (node) {\r\n        return {\r\n            x1: node.pos.x + node.box.offset.x,\r\n            x2: node.pos.x + node.box.offset.x + node.size.x + node.box.size.x,\r\n            y1: node.pos.y + node.box.offset.y,\r\n            y2: node.pos.y + node.box.offset.y + node.size.y + node.box.size.y\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {BaseNode} node\r\n     * @returns {Array.<{x: number, y: number}>}\r\n     */\r\n    BaseNode.prototype.getBoxVertices = function (node) {\r\n        if (node === undefined) node = this;\r\n        var angle = -MathUtil.rad(node.angle);\r\n\r\n        var dx = node.box.offset.x + node.box.size.x / 2 + node.getPosition().x - j2Ds.scene.view.pos.x;\r\n        var dy = node.box.offset.y + node.box.size.y / 2 + node.getPosition().y - j2Ds.scene.view.pos.y;\r\n\r\n        var box = this.getBox(node);\r\n\r\n        return [\r\n            {\r\n                x: (dx + (box.y1 - dy) * Math.sin(angle) + (box.x2 - dx) * Math.cos(angle)).toFixed(5),\r\n                y: (dy + (box.y1 - dy) * Math.cos(angle) - (box.x2 - dx) * Math.sin(angle)).toFixed(5)\r\n            },\r\n            {\r\n                x: (dx + (box.y2 - dy) * Math.sin(angle) + (box.x2 - dx) * Math.cos(angle)).toFixed(5),\r\n                y: (dy + (box.y2 - dy) * Math.cos(angle) - (box.x2 - dx) * Math.sin(angle)).toFixed(5)\r\n            },\r\n            {\r\n                x: (dx + (box.y2 - dy) * Math.sin(angle) + (box.x1 - dx) * Math.cos(angle)).toFixed(5),\r\n                y: (dy + (box.y2 - dy) * Math.cos(angle) - (box.x1 - dx) * Math.sin(angle)).toFixed(5)\r\n            },\r\n            {\r\n                x: (dx + (box.y1 - dy) * Math.sin(angle) + (box.x1 - dx) * Math.cos(angle)).toFixed(5),\r\n                y: (dy + (box.y1 - dy) * Math.cos(angle) - (box.x1 - dx) * Math.sin(angle)).toFixed(5)\r\n            }\r\n        ]\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param node1\r\n     * @param node2\r\n     * @returns {*}\r\n     */\r\n    var checkBoxIntersect = function (node1, node2) {\r\n        var a, b;\r\n        if (node1.angle === 0 && node2.angle === 0) {\r\n            a = node1.getBox(node1);\r\n            b = node1.getBox(node2);\r\n\r\n            return !(a.y1 > b.y2 || a.y2 < b.y1 || a.x2 < b.x1 || a.x1 > b.x2);\r\n        } else {\r\n            a = node1.getBoxVertices(node1);\r\n            b = node1.getBoxVertices(node2);\r\n\r\n            if (!MathUtil.is4VerticesIntersect(a, b)) {\r\n                return node1.isPointInsideBox(a, node2.getPosition())\r\n                    || node2.isPointInsideBox(b, node1.getPosition());\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param vf\r\n     * @param point\r\n     * @returns {boolean}\r\n     */\r\n    BaseNode.prototype.isPointInsideBox = function (vf, point) {\r\n        return MathUtil.isPointInRect(vf[0], vf[1], vf[2], vf[3], point);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param node2\r\n     * @returns {*}\r\n     */\r\n    BaseNode.prototype.isIntersect = function (node2) {\r\n        var node1 = this;\r\n\r\n        if (node2 instanceof BaseNode) {\r\n            return checkBoxIntersect(node1, node2);\r\n        } else if (node2 instanceof Array && node2.length > 0 && node2[0] instanceof BaseNode) {\r\n            for (var i = 0; i < node2.length; i++) {\r\n                if (checkBoxIntersect(node1, node2[i])) return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param id\r\n     * @returns {boolean}\r\n     */\r\n    BaseNode.prototype.isCollision = function (id) {\r\n        var result = false;\r\n        if (\r\n            (this.getDistanceXY(id).x < (this.size.x / 2 + id.size.x / 2)) &&\r\n            (this.getDistanceXY(id).y < (this.size.y / 2 + id.size.y / 2))\r\n        ) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    BaseNode.prototype.isLookScene = function () {\r\n        return !((this.pos.x > j2Ds.scene.view.pos.x + j2Ds.scene.width || this.pos.x + this.size.x < j2Ds.scene.view.pos.x)\r\n        || (this.pos.y > j2Ds.scene.view.pos.y + j2Ds.scene.height || this.pos.y + this.size.y < j2Ds.scene.view.pos.y));\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param angle\r\n     */\r\n    BaseNode.prototype.turn = function (angle) {\r\n        this.angle = (this.angle % 360);\r\n        this.angle += angle;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param angle\r\n     */\r\n    BaseNode.prototype.setRotation = function (angle) {\r\n        this.angle = angle % 360;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {number|*}\r\n     */\r\n    BaseNode.prototype.getRotation = function () {\r\n        return this.angle;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param to\r\n     * @param t\r\n     */\r\n    BaseNode.prototype.rotateTo = function (to, t) {\r\n        t = t ? t : 1;\r\n        this.setRotation((Math.atan2(\r\n                (to.y - this.getPosition().y),\r\n                (to.x - this.getPosition().x)\r\n            ) * (180 / Math.PI)) / t);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {{}}\r\n     */\r\n    BaseNode.prototype.isOutScene = function () {\r\n        var vector = {};\r\n\r\n        if (this.pos.x + this.size.x >= j2Ds.scene.view.pos.x + j2Ds.scene.width) {\r\n            vector.x = 1;\r\n        } else if (this.pos.x <= j2Ds.scene.view.pos.x) {\r\n            vector.x = -1;\r\n        } else {\r\n            vector.x = 0;\r\n        }\r\n\r\n        if (this.pos.y + this.size.y >= j2Ds.scene.view.pos.y + j2Ds.scene.height) {\r\n            vector.y = 1;\r\n        } else if (this.pos.y <= j2Ds.scene.view.pos.y) {\r\n            vector.y = -1;\r\n        } else {\r\n            vector.y = 0;\r\n        }\r\n\r\n        vector.all = (vector.x || vector.y);\r\n\r\n        return vector;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param speed\r\n     */\r\n    BaseNode.prototype.moveDir = function (speed) {\r\n        this.pos.x += speed * (Math.cos(MathUtil.rad(this.angle)));\r\n        this.pos.y += speed * (Math.sin(MathUtil.rad(this.angle)));\r\n    };\r\n\r\n    /**\r\n     *\r\n     */\r\n    BaseNode.prototype.drawBox = function () {\r\n        var context = this.layer.context;\r\n\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = 'black';\r\n\r\n        if (this.angle) {\r\n            context.save();\r\n            context.translate(\r\n                this.getPosition().x - j2Ds.scene.view.pos.x,\r\n                this.getPosition().y - j2Ds.scene.view.pos.y\r\n            );\r\n            context.rotate(MathUtil.rad(this.angle));\r\n            context.translate(\r\n                -(this.getPosition().x - j2Ds.scene.view.pos.x),\r\n                -(this.getPosition().y - j2Ds.scene.view.pos.y)\r\n            );\r\n        }\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.pos.x - j2Ds.scene.view.pos.x,\r\n            this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.size.x, this.size.y);\r\n        context.stroke();\r\n\r\n        if (this.angle) {\r\n            context.restore();\r\n            context.save();\r\n            context.translate(\r\n                this.box.offset.x + this.box.size.x / 2 + this.getPosition().x - j2Ds.scene.view.pos.x,\r\n                this.box.offset.y + this.box.size.y / 2 + this.getPosition().y - j2Ds.scene.view.pos.y\r\n            );\r\n            context.rotate(MathUtil.rad(this.angle));\r\n            context.translate(\r\n                -(this.box.offset.x + this.box.size.x / 2 + this.getPosition().x - j2Ds.scene.view.pos.x),\r\n                -(this.box.offset.y + this.box.size.y / 2 + this.getPosition().y - j2Ds.scene.view.pos.y)\r\n            );\r\n        }\r\n\r\n        context.strokeStyle = 'yellow';\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.box.offset.x + this.pos.x - j2Ds.scene.view.pos.x,\r\n            this.box.offset.y + this.pos.y - j2Ds.scene.view.pos.y,\r\n            this.box.size.x + this.size.x,\r\n            this.box.size.y + this.size.y);\r\n        context.stroke();\r\n\r\n        if (this.angle) {\r\n            context.restore();\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.BaseNode = BaseNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.BaseNode = BaseNode;\r\n    return BaseNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CircleNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @exports module:nodes/CircleNode\r\n     */\r\n    var CircleNode;\r\n\r\n    /**\r\n     * Примитивный узел для отрисовки круга.\r\n     *\r\n     * @class CircleNode\r\n     *\r\n     * @constructor\r\n     * @extends module:nodes/BaseNode\r\n     * @param {j2DsEngine} j2DsEngine\r\n     * @param {{x: number, y: number}} pos\r\n     * @param {number} radius\r\n     * @param {string} color\r\n     *\r\n     * @property {string} color\r\n     * @property {number} radius\r\n     */\r\n    CircleNode = function (j2DsEngine, pos, radius, color) {\r\n        j2Ds = j2DsEngine;\r\n        BaseNode.call(this, j2DsEngine, pos, MathUtil.v2f(radius * 2, radius * 2));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.radius = radius;\r\n    };\r\n\r\n    CircleNode.prototype = Object.create(BaseNode.prototype);\r\n    CircleNode.prototype.constructor = CircleNode;\r\n\r\n    /**\r\n     * Метод для отрисовки узла\r\n     */\r\n    CircleNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n            context.lineWidth = 0;\r\n            context.fillStyle = this.color;\r\n\r\n            context.beginPath();\r\n            context.arc(this.pos.x - j2Ds.scene.view.pos.x + this.radius,\r\n                this.pos.y - j2Ds.scene.view.pos.y + this.radius,\r\n                this.radius, 0, 2 * Math.PI, true);\r\n            context.stroke();\r\n            context.fill();\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.CircleNode = CircleNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.CircleNode = CircleNode;\r\n    return CircleNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/LineNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @exports module:nodes/LineNode\r\n     */\r\n    var LineNode;\r\n\r\n    /**\r\n     * Примитивный узел для отрисовки линии.\r\n     *\r\n     * @class LineNode\r\n     *\r\n     * @constructor\r\n     * @extends module:nodes/BaseNode\r\n     * @param {j2DsEngine} j2DsEngine\r\n     * @param {{x: number, y: number}} pos\r\n     * @param {Array.<Array.<number>>} points\r\n     * @param {number} scale\r\n     * @param {string} color\r\n     * @param {number} width\r\n     * @param {boolean} fill\r\n     * @param {string} cFill\r\n     * \r\n     * @property {string} color\r\n     * @property {Array.<Array.<number>>} points\r\n     * @property {boolean} fill\r\n     * @property {number} scale\r\n     * @property {string} cFill\r\n     * @property {number} lineWidth\r\n     */\r\n    LineNode = function (j2DsEngine, pos, points, scale, color, width, fill, cFill) {\r\n        j2Ds = j2DsEngine;\r\n        BaseNode.call(this, j2DsEngine, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.points = points;\r\n        this.fill = !!fill || false;\r\n        this.scale = scale || 0;\r\n        this.cFill = cFill;\r\n        this.lineWidth = width;\r\n    };\r\n\r\n    LineNode.prototype = Object.create(BaseNode.prototype);\r\n    LineNode.prototype.constructor = LineNode;\r\n\r\n    /**\r\n     * Метод для отрисовки узла\r\n     */\r\n    LineNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.strokeStyle = this.color;\r\n            context.lineWidth = this.lineWidth;\r\n\r\n            context.beginPath();\r\n            context.moveTo(this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y);\r\n\r\n            for (var i = 0, len = this.points.length; i < len; i += 1) {\r\n                context.lineTo(\r\n                    this.pos.x + this.points[i][0] * this.scale - j2Ds.scene.view.pos.x,\r\n                    this.pos.y + this.points[i][1] * this.scale - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.stroke();\r\n            if (this.fill) {\r\n                context.fillStyle = this.cFill;\r\n                context.fill();\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.LineNode = LineNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.LineNode = LineNode;\r\n    return LineNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/RectNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @exports module:nodes/RectNode\r\n     */\r\n    var RectNode;\r\n    \r\n    /**\r\n     * Примитивный узел для отрисовки прямоугольника.\r\n     *\r\n     * @class RectNode\r\n     *\r\n     * @constructor\r\n     * @extends module:nodes/BaseNode\r\n     *\r\n     * @param {j2DsEngine} j2DsEngine\r\n     * @param {{x: number, y: number}} pos\r\n     * @param {{x: number, y: number}} size\r\n     * @param {string} color\r\n     *\r\n     * @property {string} color\r\n     */\r\n    RectNode = function (j2DsEngine, pos, size, color) {\r\n        j2Ds = j2DsEngine;\r\n        BaseNode.call(this, j2DsEngine, pos, size);\r\n\r\n        this.color = color;\r\n    };\r\n\r\n    RectNode.prototype = Object.create(BaseNode.prototype);\r\n    RectNode.prototype.constructor = RectNode;\r\n\r\n    /**\r\n     * Метод для отрисовки узла\r\n     */\r\n    RectNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.lineWidth = 0;\r\n\r\n            context.fillRect(\r\n                this.pos.x - j2Ds.scene.view.pos.x,\r\n                this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.RectNode = RectNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.RectNode = RectNode;\r\n    return RectNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/SpriteNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @exports module:nodes/SpriteNode\r\n     */\r\n    var SpriteNode;\r\n    \r\n    /**\r\n     * Примитивный узел для отрисовки спрайта.\r\n     *\r\n     * @class SpriteNode\r\n     *\r\n     * @constructor\r\n     * @extends module:nodes/BaseNode\r\n     * \r\n     * @param {j2DsEngine} j2DsEngine\r\n     * @param {{x: number, y: number}} pos\r\n     * @param {{x: number, y: number}} size\r\n     * @param {{imageMap: {img: null|Element, loaded: boolean, width: number, height: number}, sourceX: number, sourceY: number, sourceW: number, sourceH: number, frameCount: number}} animation\r\n     * \r\n     * @property {number} tmpSpeed\r\n     * @property {number} frame\r\n     * @property {{imageMap: {img: null|Element, loaded: boolean, width: number, height: number}, sourceX: number, sourceY: number, sourceW: number, sourceH: number, frameCount: number}} animation\r\n     * @property {{x: boolean|number, y: boolean|number}} flip\r\n     */\r\n    SpriteNode = function (j2DsEngine, pos, size, animation) {\r\n        j2Ds = j2DsEngine;\r\n        BaseNode.call(this, j2DsEngine, pos, size);\r\n\r\n        this.tmpSpeed = 0;\r\n        this.frame = 0;\r\n        this.animation = animation;\r\n        this.flip = {x: false, y: false};\r\n    };\r\n\r\n    SpriteNode.prototype = Object.create(BaseNode.prototype);\r\n    SpriteNode.prototype.constructor = SpriteNode;\r\n\r\n    /**\r\n     * //TODO Добавить описание этой херни\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    SpriteNode.prototype.setFlip = function (x, y) {\r\n        this.flip = {x: x, y: y};\r\n    };\r\n\r\n    /**\r\n     * Метод для отрисовки узла\r\n     */\r\n    SpriteNode.prototype.draw = function (speed) {\r\n        if (this.visible && this.isLookScene()) {\r\n            speed = speed || 1;\r\n\r\n            if (this.frame > this.animation.frameCount) {\r\n                this.frame = 0;\r\n            }\r\n            this.drawFrame(this.frame + 1);\r\n\r\n            if (this.tmpSpeed > speed) {\r\n                this.frame += 1;\r\n                this.tmpSpeed = 0;\r\n            }\r\n            else {\r\n                this.tmpSpeed += 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Отрисовка одного кадра\r\n     *\r\n     * @param {number} frame\r\n     * @returns {void|{added, loaded, failed}}\r\n     */\r\n    SpriteNode.prototype.drawFrame = function (frame) {\r\n        if (!this.animation.imageMap.loaded) return (err.show('Invalid ImageMap', 'red'));\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.scale(this.flip.x ? -1 : 1, this.flip.y ? -1 : 1);\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            frame = frame ? (frame - 1) : 0;\r\n\r\n            context.drawImage(\r\n                this.animation.imageMap.img,\r\n                (this.animation.sourceX + (this.animation.sourceW * frame)), this.animation.sourceY,\r\n                this.animation.sourceW, this.animation.sourceH,\r\n                this.pos.x - j2Ds.scene.view.pos.x, this.pos.y - j2Ds.scene.view.pos.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Устанавливает анимацию\r\n     *\r\n     * @param {{imageMap: {img: null|Element, loaded: boolean, width: number, height: number}, sourceX: number, sourceY: number, sourceW: number, sourceH: number, frameCount: number}} animation\r\n     */\r\n    SpriteNode.prototype.setAnimation = function (animation) {\r\n        if (this.animation != animation) {\r\n            this.animation = animation;\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.SpriteNode = SpriteNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.SpriteNode = SpriteNode;\r\n    return SpriteNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/TextNode', ['nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.nodes.BaseNode, root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    var j2Ds;\r\n\r\n    /**\r\n     * @exports module:nodes/TextNode\r\n     */\r\n    var TextNode;\r\n    \r\n    /**\r\n     * Примитивный узел для отрисовки текста.\r\n     *\r\n     * @class TextNode\r\n     *\r\n     * @constructor\r\n     * @extends module:nodes/BaseNode\r\n     * \r\n     * @param {j2DsEngine} j2DsEngine\r\n     * @param {{x: number, y: number}} pos\r\n     * @param {string} text\r\n     * @param {number} sizePx\r\n     * @param {string} color\r\n     * @param {string} family\r\n     * @param {number} width\r\n     * @param {string} colorL\r\n     *\r\n     * @property {number} vAlign\r\n     * @property {number} hAlign\r\n     * @property {string} color\r\n     * @property {string} family\r\n     * @property {number} sizePx\r\n     * @property {number} lineWidth\r\n     * @property {string} colorL\r\n     * @property {string} font\r\n     * @property {string} fullText\r\n     * @property {number} maxWidth\r\n     * @property {Array.<string>} lines\r\n     */\r\n    TextNode = function (j2DsEngine, pos, text, sizePx, color, family, width, colorL) {\r\n        j2Ds = j2DsEngine;\r\n        BaseNode.call(this, j2DsEngine, pos, MathUtil.v2f(0, 0));\r\n\r\n        /*Свойства*/\r\n\r\n        this.vAlign = 'top';\r\n        this.hAlign = 'left';\r\n        this.color = color ? color : 'black';\r\n\r\n        this.family = family ? family : 'serif';\r\n        this.sizePx = sizePx ? sizePx : 20;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        this.lineWidth = width ? width : 0;\r\n        this.colorL = colorL ? colorL : 'black';\r\n\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    TextNode.prototype = Object.create(BaseNode.prototype);\r\n    TextNode.prototype.constructor = TextNode;\r\n\r\n    /**\r\n     * Устанавливает размер текста\r\n     *\r\n     * @param {number} sizePx\r\n     */\r\n    TextNode.prototype.setSize = function (sizePx) {\r\n        this.sizePx = sizePx;\r\n        this.font = this.sizePx + 'px ' + this.family;\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    /**\r\n     * Возвращает текущий размер\r\n     *\r\n     * @returns {number}\r\n     */\r\n    TextNode.prototype.getSize = function () {\r\n        return this.sizePx;\r\n    };\r\n\r\n    /**\r\n     * Метод для быстрого изменения текста и его последующей отрисовки.\r\n     *\r\n     * @deprecated\r\n     * @param {string} text\r\n     * @param {{x: number, y: number}} pos\r\n     * @param {string} color\r\n     * @param {string} colorL\r\n     */\r\n    TextNode.prototype.drawSimpleText = function (text, pos, color, colorL) {\r\n        var context = this.layer.context;\r\n        context.fillStyle = color ? color : this.color;\r\n        context.textAlign = this.hAlign;\r\n        context.textBaseline = this.vAlign;\r\n        context.font = this.font;\r\n        context.lineWidth = this.lineWidth;\r\n        context.strokeStyle = colorL ? colorL : this.colorL;\r\n\r\n        var lines = text.split(\"\\n\");\r\n\r\n        pos = pos ? pos : this.pos;\r\n\r\n        if (this.alpha != 1) {\r\n            var tmpAlpha = context.globalAlpha;\r\n            context.globalAlpha = this.alpha;\r\n        }\r\n\r\n        for (var i = 0, len = lines.length; i < len; i += 1) {\r\n            if (this.lineWidth) {\r\n                context.strokeText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n            }\r\n            context.fillText(lines[i], pos.x, pos.y + this.sizePx * i);\r\n        }\r\n\r\n        if (this.alpha != 1) {\r\n            context.globalAlpha = tmpAlpha;\r\n        }\r\n\r\n        context.lineWidth = 0;\r\n        context.strokeStyle = 'black';\r\n    };\r\n\r\n    /**\r\n     * Возвращает текст\r\n     *\r\n     * @returns {string}\r\n     */\r\n    TextNode.prototype.getText = function () {\r\n        return this.fullText;\r\n    };\r\n\r\n    /**\r\n     * Устанавливает текст\r\n     *\r\n     * @param {string} text\r\n     */\r\n    TextNode.prototype.setText = function (text) {\r\n        this.fullText = text;\r\n        this.maxWidth = 0;\r\n        this.lines = text.split(\"\\n\");\r\n\r\n        j2Ds.scene.context.font = this.font;\r\n\r\n        this.box.offset.y = MathUtil.toInt(this.sizePx * 0.26);\r\n        this.box.size.y = -MathUtil.toInt(this.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n            this.maxWidth = (this.maxWidth < j2Ds.scene.context.measureText(this.lines[i]).width ?\r\n                j2Ds.scene.context.measureText(this.lines[i]).width :\r\n                this.maxWidth);\r\n        }\r\n        this.size.x = this.maxWidth;\r\n        this.size.y = this.lines.length * this.sizePx;\r\n    };\r\n\r\n    /**\r\n     * Метод для отрисовки узла\r\n     */\r\n    TextNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - j2Ds.scene.view.pos.x, this.getPosition().y - j2Ds.scene.view.pos.y);\r\n                context.rotate(MathUtil.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - j2Ds.scene.view.pos.x), -(this.getPosition().y - j2Ds.scene.view.pos.y));\r\n            }\r\n\r\n            context.fillStyle = this.color;\r\n            context.textAlign = this.hAlign;\r\n            context.textBaseline = this.vAlign;\r\n            context.font = this.font;\r\n            context.lineWidth = this.lineWidth;\r\n            context.strokeStyle = this.colorL;\r\n\r\n            for (var i = 0, len = this.lines.length; i < len; i += 1) {\r\n                if (this.lineWidth) {\r\n                    context.strokeText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n                }\r\n                context.fillText(this.lines[i], this.pos.x - j2Ds.scene.view.pos.x, this.pos.y + this.sizePx * i - j2Ds.scene.view.pos.y);\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n            context.strokeStyle = 'black';\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TextNode = TextNode;\r\n    if (global.j2Ds !== undefined) global.modules.nodes.TextNode = TextNode;\r\n    return TextNode;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/DeviceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var DeviceManager = function () {\r\n        return {\r\n            width: (parseInt(document.documentElement.clientWidth) < parseInt(screen.width))\r\n                ? parseInt(document.documentElement.clientWidth)\r\n                : parseInt(screen.width),\r\n            height: (parseInt(document.documentElement.clientHeight) < parseInt(screen.height))\r\n                ? parseInt(document.documentElement.clientHeight)\r\n                : parseInt(screen.height)\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.DeviceManager = DeviceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.DeviceManager = DeviceManager;\r\n    return DeviceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ErrorManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ErrorManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.mode = 'neverShow'; // values: onlyShow|stopAndShow|neverShow\r\n        this.enabled = false;\r\n    };\r\n\r\n    ErrorManager.prototype.init = function (_true) {\r\n        var errorManager = this;\r\n        errorManager.enabled = _true || true;\r\n\r\n        var runBtn = document.createElement('div');\r\n        runBtn.innerHTML = '<b>RUN</b>';\r\n        runBtn.style.padding = '5px';\r\n        runBtn.align = 'center';\r\n        runBtn.style.position = 'fixed';\r\n        runBtn.style.zIndex = 20000;\r\n        runBtn.style.left = '0px';\r\n        runBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        runBtn.style.fontSize = '8pt';\r\n        runBtn.style.backgroundColor = '#B8FFB8';\r\n        runBtn.style.height = '12px';\r\n        runBtn.style.width = '50px';\r\n        runBtn.style.cursor = 'pointer';\r\n\r\n        runBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        runBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение продолжено');\r\n            errorManager.j2Ds.runEngine(errorManager.j2Ds);\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(runBtn);\r\n        errorManager.logListener.elems.push(runBtn);\r\n\r\n\r\n        var pauseBtn = document.createElement('div');\r\n        pauseBtn.innerHTML = '<b>PAUSE</b>';\r\n        pauseBtn.style.padding = '5px';\r\n        pauseBtn.align = 'center';\r\n        pauseBtn.style.position = 'fixed';\r\n        pauseBtn.style.zIndex = 20000;\r\n        pauseBtn.style.left = '60px';\r\n        pauseBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        pauseBtn.style.fontSize = '8pt';\r\n        pauseBtn.style.backgroundColor = '#FFFFBD';\r\n        pauseBtn.style.height = '12px';\r\n        pauseBtn.style.width = '50px';\r\n        pauseBtn.style.cursor = 'pointer';\r\n\r\n        pauseBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        pauseBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.show('Выполнение приостановлено');\r\n            errorManager.j2Ds.stopEngine();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(pauseBtn);\r\n        errorManager.logListener.elems.push(pauseBtn);\r\n\r\n        var reloadBtn = document.createElement('div');\r\n        reloadBtn.innerHTML = '<b>RELOAD</b>';\r\n        reloadBtn.style.padding = '5px';\r\n        reloadBtn.align = 'center';\r\n        reloadBtn.style.position = 'fixed';\r\n        reloadBtn.style.zIndex = 20000;\r\n        reloadBtn.style.left = '120px';\r\n        reloadBtn.style.top = -20 + errorManager.j2Ds.getDeviceManager().height + 'px';\r\n        reloadBtn.style.fontSize = '8pt';\r\n        reloadBtn.style.backgroundColor = '#E2E2E2';\r\n        reloadBtn.style.color = 'black';\r\n        reloadBtn.style.height = '12px';\r\n        reloadBtn.style.width = '50px';\r\n        reloadBtn.style.cursor = 'pointer';\r\n\r\n        reloadBtn.onmousedown = function (e) {\r\n            e.stopPropagation();\r\n        };\r\n\r\n        reloadBtn.onclick = function (e) {\r\n            e.stopPropagation();\r\n            errorManager.j2Ds.dom.reloadURL();\r\n            return false;\r\n        };\r\n\r\n        errorManager.j2Ds.dom.attach(reloadBtn);\r\n        errorManager.logListener.elems.push(reloadBtn);\r\n\r\n        errorManager.j2Ds.events.addEvent('dom:loaded', function () {\r\n            errorManager.j2Ds.window.onerror = function (e) {\r\n                errorManager.show(e);\r\n            };\r\n        });\r\n    };\r\n\r\n    ErrorManager.prototype.show = function (string) {\r\n        console.log('[j2Ds]: ' + string);\r\n    };\r\n\r\n    ErrorManager.prototype.setMode = function (mode) {\r\n        this.mode = mode;\r\n        if (mode == 'neverShow') {\r\n            this.enabled = false;\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.debug = function (string) {\r\n        if (!this.enabled) return;\r\n        this.j2Ds.stopEngine();\r\n        if (this.mode != 'neverShow') {\r\n            this.show(string || 'Точка останова достигнута');\r\n        }\r\n    };\r\n\r\n    ErrorManager.prototype.showError = function (err, _func) {\r\n        if (this.mode == 'neverShow') return;\r\n\r\n        var stack = err.stack.toString();\r\n        stack = stack.split(/\\n/);\r\n\r\n        for (var i = 0, len = stack.length; i < len; i += 1) {\r\n            if (stack[i].match(/\\:\\d/)) {\r\n                stack = stack[i].split(/\\s/);\r\n                break;\r\n            }\r\n        }\r\n\r\n        stack = stack[stack.length - 1];\r\n        stack = stack.replace(/([\\(\\)]|[\\w]+:\\/\\/)/g, '');\r\n        var file = stack.split(':'),\r\n            line = file[1],\r\n            number = file[2];\r\n        file = decodeURI(file[0]);\r\n\r\n        if (file.match(/(<anonymous>|\\bj2Ds.js)/)) {\r\n            file = '<Функция-аргумент или строка>';\r\n        }\r\n\r\n        var errMess = 'Тип ошибки: \"' + err.name + '\"' +\r\n            '\\nСообщение: \"' + err.message + '\"' +\r\n            '\\nФайл с ошибкой: \"' + file + '\"' +\r\n            '\\nСтрока: ' + line +\r\n            ', символ: ' + number;\r\n\r\n        if (_func) {\r\n            errMess += '\\nОшибка в теле функции: \\n' + _func.toString();\r\n        }\r\n\r\n        this.show(errMess);\r\n\r\n        if (this.mode == 'stopAndShow') {\r\n            this.j2Ds.stopEngine();\r\n            this.show('Выполнение приостановлено');\r\n        }\r\n\r\n    };\r\n\r\n    ErrorManager.prototype.logListener = {\r\n        domId: '',\r\n        count: 0,\r\n        execLine: '',\r\n        elems: []\r\n    };\r\n\r\n    ErrorManager.prototype.lightSyntax = function (_code, _type) {\r\n        var code = ('' + _code).toString();\r\n\r\n        if (_type == 'boolean') {\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        } else if (_type == 'code') {\r\n            code = code.replace(/(this|var|typeof|new|return|if|else|for|in|while|break|do|continue|switch|case)([^a-z0-9\\$_])/gi,\r\n                '<span style=\"color: #FFC0CB;\"><b>$1</b></span>$2')\r\n                .replace(/(function|object)/gi,\r\n                    '<span style=\"color: #FFA500;\">$1</span>')\r\n                .replace(/(width|height|window|document|scene|j2Ds|value)/gi,\r\n                    '<span style=\"color: #59B5C0;\">$1</span>')\r\n                .replace(/([a-z\\_\\$][a-z0-9_]*)\\(/gi, '<span style=\"color: #FFCD70;\">$1</span>(')\r\n                .replace(/(\\{|\\}|\\]|\\[|\\|)/gi, '<span style=\"color: #FFFF00;\">$1</span>')\r\n                .replace(/('.*?')/g, '<span style=\"color: #8FFF8F;\">$1</span>')\r\n                .replace(/(#[a-z0-9]{3,8};)/, '<b style=\"color: red;\">$1</b>')\r\n                .replace(/(\\t)/g, '&nbsp;&nbsp;');\r\n\r\n            code = code.replace(/true/gi, '<b style=\"color: #12D400;\">$&</b>')\r\n                .replace(/false/gi, '<b style=\"color: #FF4444;\">$&</b>');\r\n        }\r\n\r\n        return code;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ErrorManager = ErrorManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ErrorManager = ErrorManager;\r\n    return ErrorManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/FpsManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var FpsManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.enabled = false;\r\n        this.fps = this.j2Ds.frameLimit;\r\n        this.tmp_of_fps = 1;\r\n        this.tmp_of_time = Date.now();\r\n    };\r\n\r\n    FpsManager.prototype.init = function () {\r\n        var fpsManager = this;\r\n        fpsManager.enabled = true;\r\n\r\n        this.j2Ds.events.addEvent('engine:after', function () {\r\n            fpsManager.update();\r\n        });\r\n    };\r\n\r\n    FpsManager.prototype.update = function () {\r\n        if (!this.enabled) return;\r\n        this.tmp_of_fps += 1;\r\n        if (this.j2Ds.now - this.tmp_of_time >= 1000) {\r\n            this.fps = this.tmp_of_fps;\r\n            this.tmp_of_fps = 1;\r\n            this.tmp_of_time = this.j2Ds.now;\r\n        }\r\n    };\r\n\r\n    FpsManager.prototype.getFPS = function () {\r\n        return this.fps <= this.j2Ds.frameLimit ? this.fps : this.j2Ds.frameLimit;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.FpsManager = FpsManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.FpsManager = FpsManager;\r\n    return FpsManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ResourceManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ResourceManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.added = 0;\r\n        this.loaded = 0;\r\n        this.failed = 0;\r\n\r\n        this.add = function () {\r\n            this.added += 1;\r\n        };\r\n\r\n        this.ok = function (file) {\r\n            this.loaded += 1;\r\n            this.j2Ds.errorManager.show('loaded: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.fail = function (file) {\r\n            this.failed += 1;\r\n            this.j2Ds.errorManager.show('error load: \"' + decodeURI(file));\r\n        };\r\n\r\n        this.show = function () {\r\n            return {'added': this.added, 'loaded': this.loaded, 'failed': this.failed};\r\n        };\r\n\r\n        this.isLoaded = function () {\r\n            return this.added == this.loaded;\r\n        };\r\n\r\n        this.getProgress = function () {\r\n            return Math.ceil(this.loaded / this.added * 100);\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ResourceManager = ResourceManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ResourceManager = ResourceManager;\r\n    return ResourceManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/StorageManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var StorageManager = function (j2Ds, id) {\r\n        this.j2Ds = j2Ds;\r\n        this.id = id;\r\n        this.ls = this.j2Ds.window.localStorage ? this.j2Ds.window.localStorage : false;\r\n        if (!this.ls) alert('j2Ds ERROR in \"createLocal(' + id + ')\" \\n' + 'Объект \"localStorage\" не поддерживается.');\r\n    };\r\n\r\n    StorageManager.prototype.saveNode = function (name, o) {\r\n        if (!this.ls) return false;\r\n        this.ls.setItem(this.id + name, JSON.stringify(o));\r\n    };\r\n\r\n    StorageManager.prototype.load = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return this.ls.getItem(this.id + name);\r\n    };\r\n\r\n    StorageManager.prototype.is = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return !!(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    StorageManager.prototype.save = function (name, value) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        this.ls.setItem(this.id + name, value);\r\n    };\r\n\r\n    StorageManager.prototype.loadNode = function (name) {\r\n        if (!this.ls) {\r\n            return false;\r\n        }\r\n        return JSON.parse(this.ls.getItem(this.id + name));\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.StorageManager = StorageManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.StorageManager = StorageManager;\r\n    return StorageManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TimeManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TimeManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.times = {};\r\n\r\n        this.insert = function (id) {\r\n            if (!this.times[id]) {\r\n                this.times[id] = this.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        this.get = function (id) {\r\n            return this.times[id];\r\n        };\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TimeManager = TimeManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TimeManager = TimeManager;\r\n    return TimeManager;\r\n}));\r\n\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/TriggerManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var TriggerManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.enabled = false;\r\n        this.triggers = {};\r\n    };\r\n\r\n    TriggerManager.prototype.add = function (id, callback) {\r\n        var triggerManager = this;\r\n        var trigger = {\r\n            command: callback,\r\n            count: 0,\r\n            state: 'stop',\r\n            last: false\r\n        };\r\n\r\n        trigger.run = function (mSec) {\r\n            if (this.state == 'job') {\r\n                this.command();\r\n                return;\r\n            }\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'job';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.job = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec && this.state != 'run') {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.loop = function (mSec) {\r\n            if (triggerManager.j2Ds.now - this.last > mSec) {\r\n                if (this.last) {\r\n                    this.state = 'run';\r\n                    this.count += 1;\r\n                    this.command();\r\n                }\r\n                this.last = triggerManager.j2Ds.now;\r\n            }\r\n        };\r\n\r\n        trigger.reset = function () {\r\n            this.count = 0;\r\n            this.state = 'stop';\r\n            this.last = false;\r\n        };\r\n\r\n        this.triggers[id] = trigger;\r\n        return trigger;\r\n    };\r\n\r\n    TriggerManager.prototype.get = function (id) {\r\n        return this.triggers[id];\r\n    };\r\n\r\n    TriggerManager.prototype.init = function () {\r\n        this.enabled = true;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.TriggerManager = TriggerManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.TriggerManager = TriggerManager;\r\n    return TriggerManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('managers/ViewManager', ['utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil) {\r\n    \"use strict\";\r\n\r\n    var ViewManager = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.views = {};\r\n    };\r\n\r\n    ViewManager.prototype.add = function (id, pos) {\r\n        var viewManager = this;\r\n        var viewport = {\r\n            focusNode: false\r\n        };\r\n\r\n        viewport.pos = pos ? MathUtil.v2f(pos.x, pos.y) : MathUtil.v2f(0, 0);\r\n\r\n        viewport.setPosition = function (pos) {\r\n            if (!pos) return this;\r\n            this.pos = MathUtil.v2f(pos.x - viewManager.j2Ds.scene.width / 2, pos.y - viewManager.j2Ds.scene.height / 2);\r\n        };\r\n\r\n        viewport.getPosition = function () {\r\n            return this.pos;\r\n        };\r\n\r\n        viewport.move = function (pos) {\r\n            this.pos.x += pos.x;\r\n            this.pos.y += pos.y;\r\n        };\r\n\r\n        viewManager.j2Ds.viewManager.views[id] = viewport;\r\n        return viewport;\r\n    };\r\n\r\n    ViewManager.prototype.get = function (id) {\r\n        return this.j2Ds.viewManager.views[id];\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.ViewManager = ViewManager;\r\n    if (global.j2Ds !== undefined) global.modules.managers.ViewManager = ViewManager;\r\n    return ViewManager;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/AudioHandler', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var AudioHandler = function () {\r\n        this.audios = {};\r\n        this.enabled = false\r\n    };\r\n\r\n    AudioHandler.prototype.init = function () {\r\n        var audioHandler = this;\r\n        this.enabled = true;\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:deactivate', function () {\r\n            audioHandler.deactivate();\r\n        });\r\n\r\n        audioHandler.j2Ds.events.addEvent('scene:activate', function () {\r\n            audioHandler.activate();\r\n        });\r\n\r\n    };\r\n\r\n    AudioHandler.prototype.load = function (id, files, vol) {\r\n        var audioHandler = this;\r\n        audioHandler.j2Ds.resources.add();\r\n        var audio = document.createElement('audio');\r\n\r\n        for (var i = 0, len = files.length; i < len; i += 1) {\r\n            var source = document.createElement('source');\r\n            source.src = files[i];\r\n            audio.appendChild(source);\r\n        }\r\n\r\n        audio.id = 'audio_' + id;\r\n\r\n        if (vol) {\r\n            audio.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n        }\r\n\r\n        var sound = {\r\n            id: id,\r\n            files: files,\r\n            domEl: audio, // DOMElement\r\n            ready: false,\r\n            len: 0,\r\n            state: 'stop',\r\n            lock: false,\r\n            volume: audio.volume,\r\n            onePlay: false\r\n        };\r\n\r\n        sound.domEl.addEventListener('loadeddata', function (e) {\r\n            sound.ready = true;\r\n            var file = e.explicitOriginalTarget || e.path[0];\r\n            audioHandler.j2Ds.resources.ok(file.currentSrc);\r\n        });\r\n\r\n        sound.domEl.addEventListener('error', function (e) {\r\n            sound.setLock(true);\r\n            //var file = e.srcElement || e.target;\r\n            //audioHandler.j2Ds.resources.fail(file.src);\r\n        });\r\n\r\n        sound.domEl.addEventListener('ended', function () {\r\n            sound.state = 'stop';\r\n        });\r\n\r\n        sound.play = function (unlock) {\r\n            if (unlock) {\r\n                this.setLock(false);\r\n            }\r\n            if (this.lock) return;\r\n            if (this.state == 'play') {\r\n                this.domEl.currentTime = 0;\r\n            }\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.loop = function () {\r\n            if (this.lock) return;\r\n            this.domEl.play();\r\n            this.state = 'play';\r\n        };\r\n\r\n        sound.pause = function (lock) {\r\n            if (this.state == 'play') {\r\n                this.setLock(lock);\r\n                this.domEl.pause();\r\n                this.state = 'pause';\r\n            }\r\n        };\r\n\r\n        sound.stop = function (lock) {\r\n            this.domEl.pause();\r\n            this.domEl.currentTime = 0;\r\n            this.state = 'stop';\r\n            if (lock) {\r\n                this.setLock(lock);\r\n            }\r\n        };\r\n\r\n        sound.setLock = function (lock) {\r\n            this.lock = lock ? true : false;\r\n        };\r\n\r\n        sound.setVolume = function (vol) {\r\n            this.domEl.volume = (vol <= 1 && vol >= 0) ? vol : 1;\r\n            this.volume = this.domEl.volume;\r\n        };\r\n\r\n        sound.getVolume = function (id) {\r\n            return this.volume;\r\n        };\r\n\r\n        sound.getState = function (id) {\r\n            return this.state;\r\n        };\r\n\r\n        sound.getPlayPosition = function () {\r\n            return this.domEl.currentTime;\r\n        };\r\n\r\n        sound.domEl.load();\r\n\r\n        this.audios[id] = sound;\r\n        return sound;\r\n    };\r\n\r\n    AudioHandler.prototype.get = function (id) {\r\n        return this.audios[id];\r\n    };\r\n\r\n    AudioHandler.prototype.pause = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].pause(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.stop = function (lock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].stop(lock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.play = function (unlock) {\r\n        for (var snd in this.audios) {\r\n            this.audios[snd].play(unlock);\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.deactivate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'play') {\r\n                this.audios[snd].pause();\r\n                this.audios[snd].state = 'deactivated';\r\n            }\r\n        }\r\n    };\r\n\r\n    AudioHandler.prototype.activate = function () {\r\n        for (var snd in this.audios) {\r\n            if (this.audios[snd].state == 'deactivated') {\r\n                this.audios[snd].play();\r\n            }\r\n        }\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.AudioHandler = AudioHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.AudioHandler = AudioHandler;\r\n    return AudioHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.4\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/InputHandler', ['utils/MathUtil', 'nodes/BaseNode'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/MathUtil'), require('nodes/BaseNode'));\r\n    } else {\r\n        factory(root.modules.utils.MathUtil, root.modules.nodes.BaseNode);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (MathUtil, BaseNode) {\r\n    \"use strict\";\r\n\r\n    var InputHandler = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n\r\n        this.pos = {x: 0, y: 0};\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.screenPos = {x: 0, y: 0};\r\n        this.touch = false;\r\n        this.touchTap = false;\r\n        this.touchHold = false;\r\n        this.touchAutoHold = false;\r\n        this.touchCount = 0;\r\n        this.touchDuration = 60;\r\n        this.keyDown = [];\r\n        this.keyPress = [];\r\n        this.keyPressed = [];\r\n        this.keyUp = [];\r\n        this.keyUped = false;\r\n        this.mouseDown = [];\r\n        this.mousePress = [];\r\n        this.mousePressed = [];\r\n        this.mouseUp = [];\r\n        this.mouseUpped = false;\r\n        this.mouseWheel = 0;\r\n        this.canceled = false;\r\n        this.body = false;\r\n        this.anyKey = false;\r\n        this.anyMouse = false;\r\n        this.writeMode = false;\r\n        this.displayCursor = '';\r\n        this.visible = true;\r\n        this.enabled = false;\r\n    };\r\n\r\n    InputHandler.prototype.mKey = {\r\n        'LEFT': 1,\r\n        'MIDDLE': 2,\r\n        'RIGHT': 3\r\n    };\r\n\r\n    InputHandler.prototype.jKey = {\r\n        'LEFT': 37,\r\n        'RIGHT': 39,\r\n        'UP': 38,\r\n        'DOWN': 40,\r\n        'SPACE': 32,\r\n        'CTRL': 17,\r\n        'SHIFT': 16,\r\n        'ALT': 18,\r\n        'ESC': 27,\r\n        'ENTER': 13,\r\n        'MINUS': 189,\r\n        'PLUS': 187,\r\n        'CAPS_LOCK': 20,\r\n        'BACKSPACE': 8,\r\n        'TAB': 9,\r\n        'Q': 81,\r\n        'W': 87,\r\n        'E': 69,\r\n        'R': 82,\r\n        'T': 84,\r\n        'Y': 89,\r\n        'U': 85,\r\n        'I': 73,\r\n        'O': 79,\r\n        'P': 80,\r\n        'A': 65,\r\n        'S': 83,\r\n        'D': 68,\r\n        'F': 70,\r\n        'G': 71,\r\n        'H': 72,\r\n        'J': 74,\r\n        'K': 75,\r\n        'L': 76,\r\n        'Z': 90,\r\n        'X': 88,\r\n        'V': 86,\r\n        'B': 66,\r\n        'N': 78,\r\n        'M': 77,\r\n        '0': 48,\r\n        '1': 49,\r\n        '2': 50,\r\n        '3': 51,\r\n        '4': 52,\r\n        '5': 53,\r\n        '6': 54,\r\n        '7': 55,\r\n        '8': 56,\r\n        'C': 67,\r\n        '9': 57,\r\n        'NUM_0': 45,\r\n        'NUM_1': 35,\r\n        'NUM_2': 40,\r\n        'NUM_3': 34,\r\n        'NUM_4': 37,\r\n        'NUM_5': 12,\r\n        'NUM_6': 39,\r\n        'NUM_7': 36,\r\n        'NUM_8': 38,\r\n        'NUM_9': 33,\r\n        'NUM_MINUS': 109,\r\n        'NUM_PLUS': 107,\r\n        'NUM_LOCK': 144,\r\n        'F1': 112,\r\n        'F2': 113,\r\n        'F3': 114,\r\n        'F4': 115,\r\n        'F5': 116,\r\n        'F6': 117,\r\n        'F7': 118,\r\n        'F8': 119,\r\n        'F9': 120,\r\n        'F10': 121,\r\n        'F11': 122,\r\n        'F12': 123\r\n    };\r\n\r\n    InputHandler.prototype.keyList = function () {\r\n        var o = [];\r\n        for (var i in this.jKey) {\r\n            o.push(i);\r\n        }\r\n        return o;\r\n    };\r\n\r\n    InputHandler.prototype.reset = function () {\r\n        if (!this.enabled) return false;\r\n        this.keyPress = [];\r\n        this.keyUp = [];\r\n        this.mousePress = [];\r\n        this.mouseUp = [];\r\n        this.mouseWheel = 0;\r\n        this.touchHold = false;\r\n        this.touchTap = false;\r\n    };\r\n\r\n    InputHandler.prototype.isKeyDown = function (code) {\r\n        return this.keyDown[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyPress = function (code) {\r\n        return this.keyPress[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isKeyUp = function (code) {\r\n        return this.keyUp[this.jKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.getPosition = function () {\r\n        return MathUtil.v2f(this.pos.x, this.pos.y);\r\n    };\r\n\r\n    InputHandler.prototype.getScreenPosition = function () {\r\n        return MathUtil.v2f(this.screenPos.x, this.screenPos.y);\r\n    };\r\n\r\n    InputHandler.prototype.setWriteMode = function (_true) {\r\n        this.writeMode = _true;\r\n    };\r\n\r\n    InputHandler.prototype.isWriteMode = function () {\r\n        return this.writeMode;\r\n    };\r\n\r\n    InputHandler.prototype.keyEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        if (e.type == 'keydown') {\r\n            if (!this.keyPressed[e.keyCode]) {\r\n                this.keyPress[e.keyCode] = true;\r\n                this.keyPressed[e.keyCode] = true;\r\n            }\r\n            if (!this.writeMode) {\r\n                e.preventDefault();\r\n            } else {\r\n                this.j2Ds.events.onEvent('writeMode:keyPress', '');\r\n            }\r\n        } else if (e.type == 'keyup') {\r\n            if (this.keyPressed[e.keyCode]) {\r\n                e.preventDefault();\r\n                this.keyPress[e.keyCode] = false;\r\n                this.keyPressed[e.keyCode] = false;\r\n                this.keyUp[e.keyCode] = true;\r\n                this.keyUped = true;\r\n            }\r\n        } else if (e.type == 'keypress' && (this.writeMode)) {\r\n            var char = '';\r\n            if (e.which != 0 && e.charCode != 0) {\r\n                if (e.which >= 32) {\r\n                    char = String.fromCharCode(e.which);\r\n                }\r\n            }\r\n            this.j2Ds.events.onEvent('writeMode:keyPress', char);\r\n        }\r\n\r\n        this.keyDown[e.keyCode] = (e.type == 'keydown') && (!this.canceled);\r\n        this.anyKey = e.keyCode;\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.cancel = function (id) {\r\n        if (!id) {\r\n            this.canceled = true;\r\n            this.keyDown = [];\r\n            this.mouseDown = [];\r\n            this.touchHold = false;\r\n            this.touchTap = false;\r\n            this.touch = false;\r\n            this.touchCount = 0;\r\n        } else {\r\n            this.keyDown[this.jKey[id]] = false;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.onNode = function (node) {\r\n        if (node instanceof BaseNode) {\r\n            if (!node.layer.visible || !node.isLookScene()) return false;\r\n            return node.isPointInsideBox(node.getBoxVertices(), this.pos);\r\n        } else if (node instanceof Array && node.length > 0 && node[0] instanceof BaseNode) {\r\n            for (var i = 0; i < node.length; i++) {\r\n                if (!node[i].layer.visible || !node[i].isLookScene()) continue;\r\n                if (node[i].isPointInsideBox(node[i].getBoxVertices(), this.pos)) return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.upd = function () {\r\n        if (!this.enabled) return false;\r\n        var dX = this.j2Ds.scene.offsetWidth / this.j2Ds.scene.width;\r\n        var dY = this.j2Ds.scene.offsetHeight / this.j2Ds.scene.height;\r\n        this.x = (this.screenPos.x / dX);\r\n        this.y = (this.screenPos.y / dY);\r\n        this.pos.x = this.j2Ds.scene.view.pos.x + this.x;\r\n        this.pos.y = this.j2Ds.scene.view.pos.y + this.y;\r\n\r\n        if (this.touchCount > 0 && this.touchCount < this.touchDuration) this.touchCount++;\r\n        // Repeater TouchHold\r\n        if (!this.touchHold && this.touchCount >= this.touchDuration) {\r\n            if (this.touchAutoHold) this.touchHold = true;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.onMove = function (e) {\r\n        var input = this.j2Ds.input;\r\n        if (!input.touch) {\r\n            input.screenPos.x = -input.j2Ds.scene.offsetLeft + e.pageX;\r\n            input.screenPos.y = -input.j2Ds.scene.offsetTop + e.pageY;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.isMouseDown = function (code) {\r\n        return this.mouseDown[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMousePress = function (code) {\r\n        return this.mousePress[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isMouseUp = function (code) {\r\n        return this.mouseUp[this.mKey[code]];\r\n    };\r\n\r\n    InputHandler.prototype.isTouch = function () {\r\n        return this.touch;\r\n    };\r\n\r\n    InputHandler.prototype.isTouchTap = function () {\r\n        return this.touchTap;\r\n    };\r\n\r\n    InputHandler.prototype.isTouchHold = function () {\r\n        return this.touchHold;\r\n    };\r\n\r\n    InputHandler.prototype.setTouchDuration = function (duration) {\r\n        return this.touchDuration = (duration > 0) ? duration : 60;\r\n    };\r\n\r\n    InputHandler.prototype.isMouseWheel = function (code) {\r\n        return (code == 'UP' && this.mouseWheel > 0) ||\r\n            (code == 'DOWN' && this.mouseWheel < 0)\r\n    };\r\n\r\n    InputHandler.prototype.onMouseWheel = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        this.mouseWheel = ((e.wheelDelta) ? e.wheelDelta : -e.detail);\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.onMouseEvent = function (e) {\r\n        if (!this.enabled) return false;\r\n        e.preventDefault();\r\n        if (!e.which && e.button) {\r\n            if (e.button & 1) e.which = 1;\r\n            else if (e.button & 4) e.which = 2;\r\n            else if (e.button & 2) e.which = 3;\r\n        }\r\n\r\n        if (e.type == 'mousedown') {\r\n            if (!this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = true;\r\n                this.mousePressed[e.which] = true;\r\n            }\r\n        } else if (e.type == 'mouseup') {\r\n            if (this.mousePressed[e.which]) {\r\n                this.mousePress[e.which] = false;\r\n                this.mousePressed[e.which] = false;\r\n                this.mouseUp[e.which] = true;\r\n                this.mouseUped = true;\r\n            }\r\n        }\r\n\r\n        this.mouseDown[e.which] = (e.type == 'mousedown') && (!this.canceled);\r\n\r\n        this.j2Ds.window.focus();\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.onTouchEvent = function (e) {\r\n        var input = this.j2Ds.input;\r\n        if (!input.enabled) return false;\r\n        e.preventDefault();\r\n\r\n        if (input.touchCount == 0) input.touchCount++;\r\n\r\n        if (!input.canceled) {\r\n            input.mouseDown = [];\r\n            input.touch = !input.canceled;\r\n        }\r\n\r\n        input.screenPos.x = -input.j2Ds.scene.offsetLeft + e.touches[0].pageX;\r\n        input.screenPos.y = -input.j2Ds.scene.offsetTop + e.touches[0].pageY;\r\n\r\n        input.j2Ds.window.focus();\r\n        return false;\r\n    };\r\n\r\n    InputHandler.prototype.setCursorImage = function (curImg) {\r\n        this.j2Ds.dom.tag('body')[0].style.cursor = 'url(\"' + curImg + '\"), auto';\r\n    };\r\n\r\n    InputHandler.prototype.setVisible = function (_true) {\r\n        this.visible = _true;\r\n        if (!_true) {\r\n            this.displayCursor = this.j2Ds.dom.tag('body')[0].style.cursor;\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = 'none';\r\n        } else {\r\n            this.j2Ds.dom.tag('body')[0].style.cursor = this.displayCursor;\r\n        }\r\n    };\r\n\r\n    InputHandler.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    InputHandler.prototype.init = function () {\r\n        var input = this;\r\n        input.enabled = true;\r\n\r\n        input.j2Ds.events.addEvent('engine:before', function () {\r\n            input.upd();\r\n        });\r\n\r\n        input.j2Ds.events.addEvent('engine:after', function () {\r\n            input.reset();\r\n        });\r\n\r\n\r\n        input.j2Ds.events.addEvent('dom:loaded', function () {\r\n            input.j2Ds.window.focus();\r\n            input.j2Ds.window.addEventListener('touchstart', input.onTouchEvent);\r\n            input.j2Ds.window.addEventListener('touchmove', input.onTouchEvent);\r\n            input.j2Ds.window.addEventListener('touchend', function () {\r\n                input.canceled = false;\r\n                if (input.touchCount >= input.touchDuration) {\r\n                    input.touchHold = true;\r\n                    input.touchTap = false;\r\n                    input.touchCount = 0;\r\n                } else if (input.touchCount >= 0 && input.touchCount < input.touchDuration) {\r\n                    input.touchTap = true;\r\n                    input.touchHold = false;\r\n                    input.touchCount = 0;\r\n                }\r\n                input.touch = false;\r\n            });\r\n            input.j2Ds.window.addEventListener('touchcancel', function () {\r\n                input.canceled = false;\r\n            });\r\n            input.j2Ds.window.oncontextmenu = function () {\r\n                return false;\r\n            };\r\n            input.j2Ds.window.onselectstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.ondragstart = input.j2Ds.window.oncontextmenu;\r\n            input.j2Ds.window.onmousedown = input.onMouseEvent;\r\n            input.j2Ds.window.onmouseup = function (e) {\r\n                input.canceled = false;\r\n                input.onMouseEvent(e);\r\n            };\r\n            input.j2Ds.window.onmousemove = input.onMove;\r\n            input.j2Ds.window.onkeydown = input.keyEvent;\r\n            input.j2Ds.window.onkeyup = function (e) {\r\n                input.canceled = false;\r\n                input.keyEvent(e);\r\n            };\r\n            input.j2Ds.window.onkeypress = input.keyEvent;\r\n            input.j2Ds.window.onmousewheel = input.onMouseWheel;\r\n\r\n            if (input.j2Ds.window.addEventListener) {\r\n                input.j2Ds.window.addEventListener(\"DOMMouseScroll\", input.onMouseWheel, false);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.InputHandler = InputHandler;\r\n    if (global.j2Ds !== undefined) global.modules.io.InputHandler = InputHandler;\r\n    return InputHandler;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Layers', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var Layers = function (j2Ds) {\r\n        this.j2Ds = j2Ds;\r\n        this.layersList = {};\r\n    };\r\n\r\n    Layers.prototype.layer = function (id) {\r\n        return this.layersList[id];\r\n    };\r\n\r\n    Layers.prototype.add = function (id, index, notDOM) {\r\n        if (!!this.layersList[id]) return false;\r\n\r\n        var layer = {\r\n            layerName: id\r\n        };\r\n\r\n        if (!notDOM) {\r\n            layer.canvas = document.createElement('canvas');\r\n        } else {\r\n            layer.canvas = this.j2Ds.dom.id(id);\r\n        }\r\n\r\n        layer.canvas.style.position = this.j2Ds.scene.stylePosition;\r\n\r\n        layer.canvas.id = id;\r\n\r\n        layer.canvas.style.zIndex = 1000 + index;\r\n        layer.canvas.style.left = this.j2Ds.scene.offsetLeft + 'px';\r\n        layer.canvas.style.top = this.j2Ds.scene.offsetTop + 'px';\r\n\r\n        layer.canvas.width = this.j2Ds.scene.width;\r\n        layer.canvas.height = this.j2Ds.scene.height;\r\n        layer.width = this.j2Ds.scene.width;\r\n        layer.height = this.j2Ds.scene.height;\r\n        layer.context = layer.canvas.getContext('2d');\r\n        layer.context.shadowColor = 'rgba(0,0,0,0)';\r\n        layer.alpha = 1;\r\n        layer.angle = 0;\r\n        layer.visible = 1;\r\n\r\n        layer.onContext = function (callback) {\r\n            callback(this.context);\r\n        };\r\n\r\n        layer.fill = function (color) {\r\n            this.context.fillStyle = color;\r\n            this.context.fillRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.setAlpha = function (alpha) {\r\n            this.canvas.style.opacity = alpha;\r\n            this.alpha = alpha;\r\n        };\r\n\r\n        layer.getAlpha = function () {\r\n            return this.alpha;\r\n        };\r\n\r\n        layer.setVisible = function (visible) {\r\n            if (visible) {\r\n                this.canvas.style.display = 'block';\r\n                this.visible = true;\r\n            } else {\r\n                this.canvas.style.display = 'none';\r\n                this.visible = false;\r\n            }\r\n        };\r\n\r\n        layer.isVisible = function () {\r\n            return this.visible;\r\n        };\r\n\r\n        layer.setIndex = function (index) {\r\n            this.canvas.style.zIndex = 1000 + index;\r\n        };\r\n\r\n        layer.clear = function () {\r\n            this.context.clearRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.clearNode = function (node) {\r\n            var layer = this;\r\n            if (node.isLookScene()) {\r\n                this.context.clearRect(\r\n                    node.pos.x - layer.j2Ds.scene.view.pos.x,\r\n                    node.pos.y - layer.j2Ds.scene.view.pos.y,\r\n                    node.size.x,\r\n                    node.size.y\r\n                );\r\n            }\r\n        };\r\n\r\n        layer.setContextSettings = function (settings) {\r\n            for (var i in settings) {\r\n                if (typeof this.context[i] !== 'undefined') {\r\n                    this.context[i] = settings[i];\r\n                }\r\n            }\r\n        };\r\n\r\n        layer.clearRect = function (pos, size) {\r\n            var layer = this;\r\n            this.context.clearRect(pos.x - layer.j2Ds.scene.view.pos.x, pos.y - layer.j2Ds.scene.view.pos.y, size.x, size.y);\r\n        };\r\n\r\n        this.layersList[id] = layer;\r\n\r\n        if (!notDOM) {\r\n            this.j2Ds.dom.attach(this.layersList[id].canvas);\r\n        }\r\n\r\n        return layer;\r\n    };\r\n\r\n    if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Layers = Layers;\r\n    if (global.j2Ds !== undefined) global.modules.core.Layers = Layers;\r\n    return Layers;\r\n}));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.2\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/Scene', [\r\n            'nodes/BaseNode',\r\n            'nodes/CircleNode',\r\n            'nodes/LineNode',\r\n            'nodes/RectNode',\r\n            'nodes/SpriteNode',\r\n            'nodes/TextNode',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('nodes/BaseNode'),\r\n            require('nodes/CircleNode'),\r\n            require('nodes/LineNode'),\r\n            require('nodes/RectNode'),\r\n            require('nodes/SpriteNode'),\r\n            require('nodes/TextNode'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.nodes.BaseNode,\r\n            root.modules.nodes.CircleNode,\r\n            root.modules.nodes.LineNode,\r\n            root.modules.nodes.RectNode,\r\n            root.modules.nodes.SpriteNode,\r\n            root.modules.nodes.TextNode,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (BaseNode,\r\n              CircleNode,\r\n              LineNode,\r\n              RectNode,\r\n              SpriteNode,\r\n              TextNode,\r\n              TextureUtil) {\r\n        \"use strict\";\r\n\r\n        var Scene = function (j2Ds) {\r\n            j2Ds = this.j2Ds = j2Ds;\r\n\r\n            this.nodes = [];\r\n            this.layerName = 'sceneNode';\r\n            this.stylePosition = 'fixed';\r\n            this.layers = j2Ds.layers;\r\n            this.view = false;\r\n            this.gameStateName = false;\r\n            this.canFullScreen = true;\r\n\r\n            this.texture = new TextureUtil(this.j2Ds);\r\n        };\r\n\r\n        /*функции*/\r\n\r\n        Scene.prototype.setView = function (id) {\r\n            this.view = this.j2Ds.viewManager.views[id];\r\n        };\r\n\r\n        Scene.prototype.getView = function () {\r\n            return this.view;\r\n        };\r\n\r\n        Scene.prototype.setAutoDraw = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:after', function () {\r\n                    scene.drawAllNodes();\r\n                }, 'autoDraw');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:after', 'autoDraw');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setAutoClear = function (toggle) {\r\n            var scene = this;\r\n            if (toggle) {\r\n                scene.j2Ds.events.addEvent('engine:before', function () {\r\n                    scene.clear();\r\n                }, 'autoClear');\r\n            } else {\r\n                scene.j2Ds.events.destroyEvent('engine:before', 'autoClear');\r\n            }\r\n        };\r\n\r\n        Scene.prototype.setGameState = function (name) {\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name].state) {\r\n                this.j2Ds.setActiveEngine(this.j2Ds.gameStates.states[name].state);\r\n            }\r\n            this.gameStateName = name;\r\n            this.j2Ds.events.onEvent('scene:changedGameState');\r\n        };\r\n\r\n        Scene.prototype.getGameState = function () {\r\n            return this.gameStateName;\r\n        };\r\n\r\n        Scene.prototype.start = function (name, frameLimit) {\r\n            this.j2Ds.events.onEvent('scene:beforeStart');\r\n            if (this.j2Ds.gameStates.states[name].start) {\r\n                this.j2Ds.gameStates.states[name].start();\r\n            }\r\n            if (this.j2Ds.gameStates.states[name]) {\r\n                this.j2Ds.start(this.j2Ds.gameStates.states[name].state, frameLimit);\r\n            }\r\n            this.j2Ds.events.onEvent('scene:afterStart');\r\n        };\r\n\r\n        Scene.prototype.fullScreen = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            var tmpCanvas = document.createElement('canvas'); // Нужны для копирования содержимого\r\n            var tmpContext = tmpCanvas.getContext('2d');      // При изменении размера\r\n            if (_true) {\r\n                this.origWidth = this.width;\r\n                this.origHeight = this.height;\r\n                this.width = this.j2Ds.getDeviceManager().width;\r\n                this.height = this.j2Ds.getDeviceManager().height;\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i];\r\n                    tmpCanvas.width = layer.width;\r\n                    tmpCanvas.height = layer.height;\r\n                    tmpContext.drawImage(layer.canvas, 0, 0);\r\n                    layer.canvas.width = this.width;\r\n                    layer.canvas.height = this.height;\r\n                    layer.width = this.width;\r\n                    layer.height = this.height;\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n\r\n                    layer.context.drawImage(tmpCanvas, 0, 0, layer.width, layer.height);\r\n                }\r\n            } else {\r\n                this.width = this.origWidth;\r\n                this.height = this.origHeight;\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i];\r\n                    layer.width = this.origWidth;\r\n                    layer.height = this.origHeight;\r\n                    layer.canvas.width = this.origWidth;\r\n                    layer.canvas.height = this.origHeight;\r\n                    this.offsetWidth = this.origWidth;\r\n                    this.offsetHeight = this.origHeight;\r\n\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.fullScale = function (_true) {\r\n            if (!this.canFullScreen) return;\r\n            var layer;\r\n            if (_true) {\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i].canvas;\r\n                    layer.style.width = this.j2Ds.getDeviceManager().width + 'px';\r\n                    layer.style.height = this.j2Ds.getDeviceManager().height + 'px';\r\n                    this.offsetWidth = this.j2Ds.getDeviceManager().width;\r\n                    this.offsetHeight = this.j2Ds.getDeviceManager().height;\r\n                }\r\n            } else {\r\n                for (var i in this.j2Ds.layers.layersList) {\r\n                    layer = this.j2Ds.layers.layersList[i].canvas;\r\n                    layer.style.width = this.width + 'px';\r\n                    layer.style.height = this.height + 'px';\r\n                    this.offsetWidth = this.width;\r\n                    this.offsetHeight = this.height;\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.clear = function () {\r\n            this.getLayer().clear();\r\n        };\r\n\r\n        Scene.prototype.getLayer = function () {\r\n            return this.j2Ds.layers.layer(this.layerName);\r\n        };\r\n\r\n        Scene.prototype.drawAllNodes = function () {\r\n            for (var i = 0, len = this.nodes.length; i < len; i += 1) {\r\n                if (this.nodes[i].draw) {\r\n                    this.nodes[i].draw();\r\n                }\r\n            }\r\n        };\r\n\r\n        Scene.prototype.init = function (width, height, canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = width;\r\n            scene.height = height;\r\n\r\n            scene.origWidth = width;\r\n            scene.origHeight = height;\r\n\r\n            scene.offsetWidth = width;\r\n            scene.offsetHeight = height;\r\n\r\n            scene.offsetLeft = 0;\r\n            scene.offsetTop = 0;\r\n\r\n\r\n            scene.j2Ds.canDeactivate = canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add('sceneNode', 0);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(scene.layerName).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(scene.layerName).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.layersList) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        Scene.prototype.initCanvas = function (id, canDeactivate) {\r\n            var scene = this;\r\n\r\n            scene.canFullScreen = false;\r\n\r\n            scene.layerName = id;\r\n\r\n            scene.j2Ds.events.onEvent('scene:beforeInit');\r\n\r\n            scene.width = parseInt(scene.j2Ds.dom.id(id).width);\r\n            scene.height = parseInt(scene.j2Ds.dom.id(id).height);\r\n\r\n            scene.origWidth = scene.width;\r\n            scene.origHeight = scene.height;\r\n\r\n            scene.offsetWidth = parseInt(scene.j2Ds.dom.id(id).offsetWidth);\r\n            scene.offsetHeight = parseInt(scene.j2Ds.dom.id(id).offsetHeight);\r\n\r\n            scene.offsetLeft = parseInt(scene.j2Ds.dom.id(id).offsetLeft);\r\n            scene.offsetTop = parseInt(scene.j2Ds.dom.id(id).offsetTop);\r\n\r\n            scene.stylePosition = scene.j2Ds.dom.id(id).style.position == 'fixed' ? 'fixed' : 'absolute';\r\n\r\n            scene.j2Ds.canDeactivate = canDeactivate != false;\r\n\r\n            scene.j2Ds.layers.add(id, 0, 1);\r\n\r\n            scene.context = scene.j2Ds.layers.layer(id).context;\r\n            scene.canvas = scene.j2Ds.layers.layer(id).canvas;\r\n            scene.visible = true;\r\n\r\n            scene.cancelClear = false;\r\n\r\n            /* Вид \"камеры\" */\r\n            scene.view = scene.j2Ds.viewManager.add('sceneView');\r\n\r\n            scene.j2Ds.events.onEvent('scene:afterInit');\r\n\r\n            scene.j2Ds.window.onload = function () {\r\n\r\n                scene.j2Ds.window.focus();\r\n\r\n                scene.j2Ds.window.onblur = function () {\r\n                    if (scene.j2Ds.stopAll == 0) {\r\n                        scene.j2Ds.stopEngine();\r\n                        scene.j2Ds.events.onEvent('scene:deactivate');\r\n                    }\r\n                };\r\n\r\n                scene.j2Ds.window.onfocus = function () {\r\n                    if (scene.j2Ds.stopAll == 1) {\r\n                        scene.j2Ds.runEngine(scene.j2Ds);\r\n                        scene.j2Ds.events.onEvent('scene:activate');\r\n                    }\r\n                };\r\n\r\n                for (var i in scene.j2Ds.layers.layersList) {\r\n                    scene.j2Ds.dom.attach(scene.j2Ds.layers.layer(i).canvas);\r\n                }\r\n\r\n                scene.j2Ds.ready = true;\r\n\r\n                scene.j2Ds.events.onEvent('dom:loaded');\r\n            };\r\n        };\r\n\r\n        /* Nodes */\r\n        Scene.prototype.addBaseNode = function (pos, size) {\r\n            return new BaseNode(this.j2Ds, pos, size);\r\n        };\r\n\r\n        Scene.prototype.addCircleNode = function (pos, radius, color) {\r\n            return new CircleNode(this.j2Ds, pos, radius, color);\r\n        };\r\n\r\n        Scene.prototype.addLineNode = function (pos, points, scale, color, width, fill, cFill) {\r\n            return new LineNode(this.j2Ds, pos, points, scale, color, width, fill, cFill);\r\n        };\r\n\r\n        Scene.prototype.addRectNode = function (pos, size, color) {\r\n            return new RectNode(this.j2Ds, pos, size, color);\r\n        };\r\n\r\n        Scene.prototype.addSpriteNode = function (pos, size, animation) {\r\n            return new SpriteNode(this.j2Ds, pos, size, animation);\r\n        };\r\n\r\n        Scene.prototype.addTextNode = function (pos, text, sizePx, color, family, width, colorL) {\r\n            return new TextNode(this.j2Ds, pos, text, sizePx, color, family, width, colorL);\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.Scene = Scene;\r\n        if (global.j2Ds !== undefined) global.modules.core.Scene = Scene;\r\n        return Scene;\r\n    }));\r\n","/**\r\n * j2Ds (HTML5 2D Game Engine)\r\n *\r\n * @authors Skaner, DeVinterX\r\n * @license zlib\r\n * @version 0.6.4\r\n */\r\n\r\n/**\r\n * @module \"j2Ds\"\r\n */\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2Ds', [\r\n            'core/Dom',\r\n            'core/Gui',\r\n            'core/Events',\r\n            'core/Layers',\r\n            'core/Scene',\r\n\r\n            'io/AudioHandler',\r\n            'io/InputHandler',\r\n\r\n            'managers/DeviceManager',\r\n            'managers/ErrorManager',\r\n            'managers/FpsManager',\r\n            'managers/ResourceManager',\r\n            'managers/StorageManager',\r\n            'managers/TimeManager',\r\n            'managers/TriggerManager',\r\n            'managers/ViewManager',\r\n\r\n            'utils/MathUtil',\r\n            'utils/TextureUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('core/Dom'),\r\n            require('core/Gui'),\r\n            require('core/Events'),\r\n            require('core/Layers'),\r\n            require('core/Scene'),\r\n\r\n            require('io/AudioHandler'),\r\n            require('io/InputHandler'),\r\n\r\n            require('managers/DeviceManager'),\r\n            require('managers/ErrorManager'),\r\n            require('managers/FpsManager'),\r\n            require('managers/ResourceManager'),\r\n            require('managers/StorageManager'),\r\n            require('managers/TimeManager'),\r\n            require('managers/TriggerManager'),\r\n            require('managers/ViewManager'),\r\n\r\n            require('utils/MathUtil'),\r\n            require('utils/TextureUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.modules.core.Dom,\r\n            root.modules.core.Gui,\r\n            root.modules.core.Events,\r\n            root.modules.core.Layers,\r\n            root.modules.core.Scene,\r\n\r\n            root.modules.io.AudioHandler,\r\n            root.modules.io.InputHandler,\r\n\r\n            root.modules.managers.DeviceManager,\r\n            root.modules.managers.ErrorManager,\r\n            root.modules.managers.FpsManager,\r\n            root.modules.managers.ResourceManager,\r\n            root.modules.managers.StorageManager,\r\n            root.modules.managers.TimeManager,\r\n            root.modules.managers.TriggerManager,\r\n            root.modules.managers.ViewManager,\r\n\r\n            root.modules.utils.MathUtil,\r\n            root.modules.utils.TextureUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    function (DOM,\r\n              GUI,\r\n              Events,\r\n              Layers,\r\n              Scene,\r\n              AudioHandler,\r\n              InputHandler,\r\n              DeviceManager,\r\n              ErrorManager,\r\n              FPSManager,\r\n              ResourceManager,\r\n              StorageManager,\r\n              TimeManager,\r\n              TriggerManager,\r\n              ViewManager,\r\n              MathUtil) {\r\n        \"use strict\";\r\n\r\n        var frameLimit = 60;\r\n\r\n        /**\r\n         * @class j2DsEngine\r\n         * @exports module:\"j2Ds\"\r\n         * @alias module:\"j2Ds\"\r\n         *\r\n         * @constructor\r\n         * @property {number} now\r\n         * @property {number} dt\r\n         * @property {number} stopAll\r\n         * @property {number} frameLimit\r\n         * @property {number} sceneStartTime\r\n         * @property {number} sceneSkipTime\r\n         * @property {function} engine\r\n         * @property {boolean} ready\r\n         * @property {Window} window\r\n         * @property {boolean} canDeactivate\r\n         */\r\n        var j2DsEngine = function () {\r\n            this.now = Date.now();\r\n            this.dt = 0;\r\n            this.stopAll = 0;\r\n            this.frameLimit = 60;\r\n            this.sceneStartTime = 0;\r\n            this.sceneSkipTime = 0;\r\n            this.engine = function () {\r\n                this.errorManager.show('Не инициализировано ни одно игровое состояние', 'red');\r\n                this.stopEngine();\r\n            };\r\n            this.ready = false;\r\n            this.window = window;\r\n            this.canDeactivate = true;\r\n\r\n            this.events = new Events(this);\r\n            this.dom = new DOM(this);\r\n            this.gui = new GUI(this);\r\n            this.resources = new ResourceManager(this);\r\n            this.trigger = new TriggerManager(this);\r\n            this.timeManager = new TimeManager(this);\r\n            this.deviceManager = DeviceManager();\r\n            this.errorManager = new ErrorManager(this);\r\n            this.fpsManager = new FPSManager(this);\r\n            this.input = new InputHandler(this);\r\n            this.layers = new Layers(this);\r\n            this.viewManager = new ViewManager(this);\r\n            this.scene = new Scene(this);\r\n\r\n            /**\r\n             * @method\r\n             * @param {string} id\r\n             * @returns {StorageManager}\r\n             */\r\n            this.createLocal = function (id) {\r\n                return new StorageManager(this, id);\r\n            }\r\n        };\r\n\r\n        /* Getters & Setters */\r\n        /**\r\n         * @returns {{name: string, version: string, git: string, site: string, description: string, author: string}}\r\n         */\r\n        j2DsEngine.prototype.getInfo = function () {\r\n            return {\r\n                'name': 'j2Ds',\r\n                'version': '0.6.4',\r\n                'git': 'https://github.com/SkanerSoft/j2Ds',\r\n                'site': 'http://j2ds.ru',\r\n                'description': 'HTML5 2D Game Engine',\r\n                'author': 'Skaner'\r\n            };\r\n        };\r\n\r\n        /**\r\n         * @returns {FpsManager}\r\n         */\r\n        j2DsEngine.prototype.getFPSManager = function () {\r\n            this.fpsManager.init();\r\n            return this.fpsManager;\r\n        };\r\n\r\n        /**\r\n         * @returns {SceneManager}\r\n         */\r\n        j2DsEngine.prototype.getSceneManager = function () {\r\n            return this.scene;\r\n        };\r\n\r\n        /**\r\n         * @returns {Layers}\r\n         */\r\n        j2DsEngine.prototype.getLayerManager = function () {\r\n            return this.layers;\r\n        };\r\n\r\n        /**\r\n         * @returns {TextureUtil}\r\n         */\r\n        j2DsEngine.prototype.getTextureManager = function () {\r\n            return this.scene.texture;\r\n        };\r\n\r\n        /**\r\n         * @returns {AudioHandler}\r\n         */\r\n        j2DsEngine.prototype.getAudioManager = function () {\r\n            this.audio.init();\r\n            return this.audio;\r\n        };\r\n\r\n        /** @deprecated */\r\n        j2DsEngine.prototype.getPaintManager = function () {\r\n            return this.paint;\r\n        };\r\n\r\n        /**\r\n         * @returns {InputHandler}\r\n         */\r\n        j2DsEngine.prototype.getIO = function () {\r\n            this.input.init();\r\n            return this.input;\r\n        };\r\n\r\n        /**\r\n         * @returns {Dom}\r\n         */\r\n        j2DsEngine.prototype.getDOMManager = function () {\r\n            return this.dom;\r\n        };\r\n\r\n        /**\r\n         * @returns {TriggerManager}\r\n         */\r\n        j2DsEngine.prototype.getTriggerManager = function () {\r\n            this.trigger.init();\r\n            return this.trigger;\r\n        };\r\n\r\n        /**\r\n         * @returns {MathUtil}\r\n         */\r\n        j2DsEngine.prototype.getMathManager = function () {\r\n            return MathUtil;\r\n        };\r\n\r\n        /**\r\n         * @returns {{states: {}, add: j2DsEngine.gameStates.add}}\r\n         */\r\n        j2DsEngine.prototype.getGameStateManager = function () {\r\n            return this.gameStates;\r\n        };\r\n\r\n        /**\r\n         * @returns {ViewManager}\r\n         */\r\n        j2DsEngine.prototype.getViewManager = function () {\r\n            return this.viewManager;\r\n        };\r\n\r\n        /**\r\n         * @returns {DeviceManager}\r\n         */\r\n        j2DsEngine.prototype.getDeviceManager = function () {\r\n            return this.deviceManager;\r\n        };\r\n\r\n        /**\r\n         * @returns {ErrorManager}\r\n         */\r\n        j2DsEngine.prototype.getErrorManager = function () {\r\n            this.errorManager.init();\r\n            return this.errorManager;\r\n        };\r\n\r\n        /**\r\n         * @returns {TimeManager}\r\n         */\r\n        j2DsEngine.prototype.getTimeManager = function () {\r\n            return this.timeManager;\r\n        };\r\n\r\n        /**\r\n         * @returns {ResourceManager}\r\n         */\r\n        j2DsEngine.prototype.getResourceManager = function () {\r\n            return this.resources;\r\n        };\r\n\r\n        /**\r\n         * @param {Window} global\r\n         */\r\n        j2DsEngine.prototype.setWindow = function (global) {\r\n            this.window = global ? global : window;\r\n        };\r\n\r\n        /**\r\n         * @param {number} fps\r\n         */\r\n        j2DsEngine.prototype.setFrameLimit = function (fps) {\r\n            this.frameLimit = (fps > 0 && fps <= 60) ? fps : 60;\r\n            frameLimit = this.frameLimit;\r\n        };\r\n\r\n        /**\r\n         * @param {function} engine\r\n         */\r\n        j2DsEngine.prototype.setActiveEngine = function (engine) {\r\n            this.engine = typeof engine == 'function'\r\n                ? engine\r\n                : this.errorManager.show('Error in \"GameStateManager\"');\r\n        };\r\n\r\n        /**\r\n         * @type {{states: {}, add: j2DsEngine.gameStates.add}}\r\n         */\r\n        j2DsEngine.prototype.gameStates = {\r\n            states: {},\r\n\r\n            add: function (name, _state, start, end) {\r\n                var state = {};\r\n                state.state = _state;\r\n                state.start = start || false;\r\n                state.end = end || false;\r\n\r\n                this.states[name] = state;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {function} engine\r\n         * @param {number} frameLimit\r\n         */\r\n        j2DsEngine.prototype.start = function (engine, frameLimit) {\r\n            this.setActiveEngine(engine);\r\n            this.frameLimit = frameLimit || 60;\r\n            this.sceneSkipTime = 1000.0 / this.frameLimit;\r\n            this.lastTime = Date.now();\r\n            this.dt = 0;\r\n            this.sceneStartTime = this.lastTime;\r\n            this.gameEngine(this);\r\n        };\r\n\r\n        /**\r\n         * @param {j2DsEngine} j2Ds\r\n         */\r\n        j2DsEngine.prototype.gameEngine = function (j2Ds) {\r\n            j2Ds.now = Date.now();\r\n            setTimeout(function () {\r\n                if (!j2Ds.stopAll) {\r\n                    j2Ds.dt = (j2Ds.now - j2Ds.lastTime) / 100.0;\r\n                    j2Ds.sceneStartTime = j2Ds.now;\r\n                    if (j2Ds.dt > j2Ds.sceneSkipTime / 2) j2Ds.dt = 0;\r\n\r\n                    j2Ds.events.onEvent('engine:before');\r\n\r\n                    try {\r\n                        j2Ds.engine();\r\n                    } catch (err) {\r\n                        j2Ds.errorManager.showError(err);\r\n                    }\r\n\r\n                    j2Ds.events.onEvent('engine:after');\r\n\r\n                    j2Ds.lastTime = j2Ds.now;\r\n\r\n                    requestAnimationFrame(function () {\r\n                        j2Ds.gameEngine(j2Ds);\r\n                    });\r\n                }\r\n            }, (j2Ds.frameLimit < 60 ? j2Ds.sceneSkipTime : 0));\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return window.requestAnimationFrame ||\r\n                window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame ||\r\n                window.oRequestAnimationFrame ||\r\n                window.msRequestAnimationFrame ||\r\n                function (callback) {\r\n                    window.setTimeout(callback, 1000 / frameLimit);\r\n                };\r\n        })();\r\n\r\n        /**\r\n         *\r\n         */\r\n        j2DsEngine.prototype.stopEngine = function () {\r\n            if (!this.canDeactivate) return;\r\n            this.stopAll = true;\r\n        };\r\n\r\n        /**\r\n         * @param {j2DsEngine} j2Ds\r\n         */\r\n        j2DsEngine.prototype.runEngine = function (j2Ds) {\r\n            j2Ds = j2Ds || this;\r\n            if (!j2Ds.canDeactivate) return;\r\n            if (!j2Ds.stopAll) return;\r\n            j2Ds.stopAll = false;\r\n            requestAnimationFrame(function () {\r\n                j2Ds.gameEngine(j2Ds);\r\n            });\r\n        };\r\n\r\n        if (typeof module === 'object' && typeof module.exports === 'object') module.exports.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.modules.core.j2Ds = j2DsEngine;\r\n        if (global.j2Ds !== undefined) global.j2Ds = new j2DsEngine();\r\n        return j2DsEngine;\r\n    }\r\n));\r\n"],"sourceRoot":"/source/"}